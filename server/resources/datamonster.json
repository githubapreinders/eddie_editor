{"CleanupOldFilesPipe":{"_id":"5a3c1d79670a9fad1820b03c","__v":0,"type":"pipes","classname":"CleanupOldFilesPipe","url":"","free":"true","attrs":{"classname":["nl.nn.adapterframework.batch.CleanupOldFilesPipe"],"name":[""],"maxThreads":["0 (unlimited)"],"filePattern":[""],"filePatternSessionKey":[""],"subdirectories":["false"],"lastModifiedDelta":["0"],"deleteEmptySubdirectories":["false"],"wildcard":[""],"excludeWildcard":[""],"minStableTime":["1000 [ms]"]},"properties":[["classname","nl.nn.adapterframework.batch.CleanupOldFilesPipe","nl.nn.adapterframework.batch.CleanupOldFilesPipe"],["name","name of the Pipe",""],["maxThreads","maximum number of threads that may call doPipe(java.lang.Object, nl.nn.adapterframework.core.IPipeLineSession) simultaneously","0 (unlimited)"],["filePattern","files that match this pattern will be deleted. Parameters of the pipe are applied to this pattern. If this attribute is not set, the input of the pipe is interpreted as the file to be removed",""],["filePatternSessionKey","",""],["subdirectories","when true, files  in subdirectories will be deleted, too","false"],["lastModifiedDelta","time in milliseconds that must have passed at least before a file will be deleted","0"],["deleteEmptySubdirectories","when true, empty subdirectories will be deleted, too","false"],["wildcard","filter of files to delete. If not set and a directory is specified, all files in the directory are interpreted to be deleted",""],["excludeWildcard","Filter of files to be excluded for deletion",""],["minStableTime","minimal age of file in milliseconds, to avoid deleting a file while it is still being written","1000 [ms]"]],"children":[],"description":"Pipe for deleting files.\n\n "},"CompareStringPipe":{"_id":"5a3c1d79670a9fad1820b03f","__v":0,"type":"pipes","classname":"CompareStringPipe","url":"","free":"true","attrs":{"name":[""],"sessionKey1 deprecated":[""],"sessionKey2 deprecated":[""],"xml":["false"],"classname":["nl.nn.adapterframework.pipes.CompareIntegerPipe"]},"properties":[["className","nl.nn.adapterframework.pipes.CompareIntegerPipe","nl.nn.adapterframework.pipes.CompareIntegerPipe"],["name","name of the Pipe",""],["sessionKey1 deprecated","reference to one of the session variables to be compared",""],["sessionKey2 deprecated","reference to the other session variables to be compared",""],["xml","when set true the string values to compare are considered to be xml strings and before the actual compare both xml strings are transformed to a canonical form","false"]],"children":[],"description":"Pipe that compares lexicographically two strings.\n\n "},"CounterSwitchPipe":{"_id":"5a3c1d79670a9fad1820b041","__v":0,"type":"pipes","classname":"CounterSwitchPipe","url":"","free":"true","attrs":{"name":[""],"divisor":["2"],"classname":["nl.nn.adapterframework.pipes.XmlIf"]},"properties":[["className","nl.nn.adapterframework.pipes.XmlIf","nl.nn.adapterframework.pipes.XmlIf"],["name","name of the Pipe",""],["divisor","","2"]],"children":[],"description":"Selects an exitState, based on the number of received messages by this pipe.\n \n The exitState is the difference (subtraction) between the divisor and\n the remainder of [number of received messages] modulus divisor.\n This will always be an integer between 1 and divisor, inclusive.\n \n "},"EchoSender":{"_id":"5a3c1d79670a9fad1820b049","__v":0,"type":"pipes","classname":"EchoSender","url":"","free":"true","properties":[],"children":[],"description":"Deprecated.&nbsp;\nPlease replace with nl.nn.adapterframework.senders.EchoSender"},"EtagHandlerPipe":{"_id":"5a3c1d79670a9fad1820b04b","__v":0,"type":"pipes","classname":"EtagHandlerPipe","url":"","free":"true","properties":[],"children":[],"description":"Pipe to manage RESTFUL etag caching"},"FilePipe":{"_id":"5a3c1d79670a9fad1820b051","__v":0,"type":"pipes","classname":"FilePipe","url":"","free":"true","properties":[],"children":[],"description":""},"SizePipe":{"_id":"5a3c1d79670a9fad1820b073","__v":0,"type":"pipes","classname":"SizePipe","url":"","free":"true","properties":[],"children":[],"description":"Returns the number of bytes or characters in the input."},"UUIDGeneratorPipe":{"_id":"5a3c1d79670a9fad1820b07b","__v":0,"type":"pipes","classname":"UUIDGeneratorPipe","url":"","free":"true","attrs":{"name":[""],"type":["alphanumeric"]},"properties":[["name","name of the Pipe",""],["type","either alphanumeric or numeric","alphanumeric"]],"children":[],"description":"Pipe that generates an UUID (Universally Unique Identifier).\n \n "},"XmlBuilderPipe":{"_id":"5a3c1d79670a9fad1820b07e","__v":0,"type":"pipes","classname":"XmlBuilderPipe","url":"","free":"true","attrs":{"substringStart":[""],"substringEnd":[""]},"properties":[["substringStart","substring to start translation",""],["substringEnd","substring to end translation",""]],"children":[],"description":"Pipe for converting special characters to their xml equivalents. \n \n "},"XmlParamSwitch":{"_id":"5a3c1d79670a9fad1820b081","__v":0,"type":"pipes","classname":"XmlParamSwitch","url":"","free":"true","properties":[],"children":[],"description":"Deprecated.&nbsp;\nplease use plain XmlSwitch, that now supports parameters too (since 4.2d)"},"XsltParamPipe":{"_id":"5a3c1d79670a9fad1820b087","__v":0,"type":"pipes","classname":"XsltParamPipe","url":"","free":"true","properties":[],"children":[],"description":"Deprecated.&nbsp;\nplease use plain XsltPipe, that now supports parameters too(since 4.2d)"},"AbstractPipe":{"_id":"5a3c1d79670a9fad1820b038","__v":0,"type":"pipes","classname":"AbstractPipe","url":"","free":"true","attrs":{"name":[""],"maxThreads":["0 (unlimited)"],"active":["true"],"durationThreshold":["-1"],"getInputFromSessionKey":[""],"getInputFromFixedValue":[""],"emptyInputReplacement":[""],"storeResultInSessionKey":[""],"preserveInput":["false"],"restoreMovedElements":["false"],"chompCharSize":[""],"elementToMove":[""],"elementToMoveSessionKey":["\"ref_\" + the name of the element"],"elementToMoveChain":[""],"(boolean) removeCompactMsgNamespaces":["true"],"namespaceAware":["application default"],"transactionTimeout":["0 (use system default)"],"(boolean) writeToSecLog":["false"],"secLogSessionKeys":[""],"(boolean) logIntermediaryResults":[""],"hideRegex":[""],"classname":["nl.nn.adapterframework.pipes.AbstractPipe"]},"properties":[["className","nl.nn.adapterframework.pipes.AbstractPipe","nl.nn.adapterframework.pipes.AbstractPipe"],["name","name of the Pipe",""],["maxThreads","maximum number of threads that may call doPipe(java.lang.Object, nl.nn.adapterframework.core.IPipeLineSession) simultaneously","0 (unlimited)"],["active","controls whether Pipe is included in configuration. When set false or set to something else as \"true\", (even set to the empty string), the Pipe is not included in the configuration","true"],["durationThreshold","if durationThreshold &gt;=0 and the duration (in milliseconds) of the message processing exceeded the value specified, then the message is logged informatory","-1"],["getInputFromSessionKey","when set, input is taken from this session key, instead of regular input",""],["getInputFromFixedValue","when set, this fixed value is taken as input, instead of regular input",""],["emptyInputReplacement","when set and the regular input is empty, this fixed value is taken as input",""],["storeResultInSessionKey","when set, the result is stored under this session key",""],["preserveInput","when set true, the input of a pipe is restored before processing the next one","false"],["restoreMovedElements","when set true, compacted messages in the result are restored to their original format (see also  ReceiverBase.setElementToMove(java.lang.String))","false"],["chompCharSize","if set (&gt;=0) and the character data length inside a xml element exceeds this size, the character data is chomped (with a clear comment)",""],["elementToMove","if set, the character data in this element is stored under a session key and in the message replaced by a reference to this session key: \"{sessionKey:\" + elementToMoveSessionKey + \"}\"",""],["elementToMoveSessionKey","(only used when elementToMove is set) name of the session key under which the character data is stored","\"ref_\" + the name of the element"],["elementToMoveChain","like elementToMove but element is preceded with all ancestor elements and separated by semicolons (e.g. \"adapter;pipeline;pipe\")",""],["(boolean) removeCompactMsgNamespaces","when set true namespaces (and prefixes) in the compacted message are removed","true"],["namespaceAware","controls namespace-awareness of possible XML parsing in descender-classes","application default"],["transactionTimeout","Timeout (in seconds) of transaction started to process a message.","0 (use system default)"],["(boolean) writeToSecLog","when set to true a record is written to the security log when the pipe has finished successfully","false"],["secLogSessionKeys","(only used when writeToSecLog=true) comma separated list of keys of session variables that is appended to the security log record",""],["(boolean) logIntermediaryResults","when set, the value in AppConstants is overwritten (for this pipe only)",""],["hideRegex","Regular expression to mask strings in the log. For example, the regular expression (?&lt;=&lt;password&gt;).*?(?=&lt;/password&gt;) will replace every character between keys '&lt;password&gt;' and '&lt;/password&gt;'. Note: this feature is used at adapter level, so one pipe affects all pipes in the pipeline (and multiple values in different pipes are merged)",""]],"children":[],"description":"Base class for Pipe.\n A Pipe represents an action to take in a Pipeline. This class is ment to be extended\n for defining steps or actions to take to complete a request. \n The contract is that a pipe is created (by the digester), setName(String) is called and\n other setters are called, and then IPipe.configure() is called, optionally\n throwing a ConfigurationException. \n As much as possible, class instantiating should take place in the\n IPipe.configure() method.\n The object remains alive while the framework is running. When the pipe is to be run,\n the doPipe method is activated.\n "},"Base64Pipe":{"_id":"5a3c1d79670a9fad1820b039","__v":0,"type":"pipes","classname":"Base64Pipe","url":"","free":"true","attrs":{"name":[""],"direction":["\"encode\""],"convert2String":["true"],"charset":["UTF-8"],"lineLength":["auto"],"lineSeparator":["auto"]},"properties":[["name","name of the Pipe",""],["direction","either encode or decode","\"encode\""],["convert2String","If true and decoding, result is returned as a string, otherwise as a byte array. If true and encoding, input is read as a string, otherwise as a byte array.","true"],["charset","character encoding to be used to encode or decode message to or from string. (only used when convert2String=true)","UTF-8"],["lineLength"," (only used when direction=encode) Each line of encoded data will be at most of the given length (rounded down to nearest multiple of 4). If lineLength &lt;= 0, then the output will not be divided into lines","auto"],["lineSeparator"," (only used when direction=encode) defines separator between lines. Special values: auto: platform default, dos: CRLF, unix: LF","auto"]],"children":[],"description":"Pipe that performs base64 encoding and decoding.\n \n "},"BytesOutputPipe":{"_id":"5a3c1d79670a9fad1820b03a","__v":0,"type":"pipes","classname":"BytesOutputPipe","url":"","free":"true","attrs":{"name":[""],"maxThreads":["0 (unlimited)"],"durationThreshold":["-1"],"getInputFromSessionKey":[""],"storeResultInSessionKey":[""],"preserveInput":["false"],"namespaceAware":["application default"],"forwardName":["\"success\""],"classname":["nl.nn.adapterframework.pipes.BytesOutputPipe"]},"properties":[["className","nl.nn.adapterframework.pipes.BytesOutputPipe","nl.nn.adapterframework.pipes.BytesOutputPipe"],["name","name of the Pipe",""],["maxThreads","maximum number of threads that may call doPipe(java.lang.Object, nl.nn.adapterframework.core.IPipeLineSession) simultaneously","0 (unlimited)"],["durationThreshold","if durationThreshold &gt;=0 and the duration (in milliseconds) of the message processing exceeded the value specified, then the message is logged informatory","-1"],["getInputFromSessionKey","when set, input is taken from this session key, instead of regular input",""],["storeResultInSessionKey","when set, the result is stored under this session key",""],["preserveInput","when set true, the input of a pipe is restored before processing the next one","false"],["namespaceAware","controls namespace-awareness of possible XML parsing in descender-classes","application default"],["forwardName","name of forward returned upon completion","\"success\""]],"children":[],"description":"Output bytes as specified by the input XML. \n\n "},"ChecksumPipe":{"_id":"5a3c1d79670a9fad1820b03b","__v":0,"type":"pipes","classname":"ChecksumPipe","url":"","free":"true","attrs":{"name":[""],"maxThreads":["0 (unlimited)"],"durationThreshold":["-1"],"getInputFromSessionKey":[""],"storeResultInSessionKey":[""],"type":["MD5"],"charset":["UTF-8"],"inputIsFile":["false"],"classname":["nl.nn.adapterframework.pipes.FixedForwardPipe"]},"properties":[["className","nl.nn.adapterframework.pipes.FixedForwardPipe","nl.nn.adapterframework.pipes.FixedForwardPipe"],["name","name of the Pipe",""],["maxThreads","maximum number of threads that may call doPipe(java.lang.Object, nl.nn.adapterframework.core.IPipeLineSession) simultaneously","0 (unlimited)"],["durationThreshold","if durationThreshold &gt;=0 and the duration (in milliseconds) of the message processing exceeded the value specified, then the message is logged informatory","-1"],["getInputFromSessionKey","when set, input is taken from this session key, instead of regular input",""],["storeResultInSessionKey","when set, the result is stored under this session key",""],["type","type of checksum to be calculated. Must be one of MD5, SHA, CRC32, Adler32","MD5"],["charset","character encoding to be used to encode message before calculating checksum","UTF-8"],["inputIsFile","when set true, the input is assumed to be a filename; otherwise the input itself is used in the calculations","false"]],"children":[],"description":"Pipe to calculate checksum on input.\n\n "},"CommandSender":{"_id":"5a3c1d79670a9fad1820b03d","__v":0,"type":"pipes","classname":"CommandSender","url":"","free":"true","attrs":{"classname":["nl.nn.adapterframework.pipes.CommandSender"]},"properties":[["className","nl.nn.adapterframework.pipes.CommandSender","nl.nn.adapterframework.pipes.CommandSender"]],"children":[],"description":"Deprecated.&nbsp;\nPlease replace with nl.nn.adapterframework.senders.CommandSender\n\n\npublic class CommandSender\nextends CommandSender\nSender that executes either its input or a fixed line, with all parametervalues appended, as a command.\n "},"CompareIntegerPipe":{"_id":"5a3c1d79670a9fad1820b03e","__v":0,"type":"pipes","classname":"CompareIntegerPipe","url":"","free":"true","attrs":{"name":[""],"maxThreads":["0 (unlimited)"],"active":["true"],"durationThreshold":["-1"],"getInputFromSessionKey":[""],"getInputFromFixedValue":[""],"storeResultInSessionKey":[""],"preserveInput":["false"],"namespaceAware":["application default"],"sessionKey1":[""],"sessionKey2":[""],"classname":["nl.nn.adapterframework.pipes.CompareIntegerPipe"]},"properties":[["className","nl.nn.adapterframework.pipes.CompareIntegerPipe","nl.nn.adapterframework.pipes.CompareIntegerPipe"],["name","name of the Pipe",""],["maxThreads","maximum number of threads that may call doPipe(java.lang.Object, nl.nn.adapterframework.core.IPipeLineSession) simultaneously","0 (unlimited)"],["active","controls whether Pipe is included in configuration. When set false or set to something else as \"true\", (even set to the empty string), the Pipe is not included in the configuration","true"],["durationThreshold","if durationThreshold &gt;=0 and the duration (in milliseconds) of the message processing exceeded the value specified, then the message is logged informatory","-1"],["getInputFromSessionKey","when set, input is taken from this session key, instead of regular input",""],["getInputFromFixedValue","when set, this fixed value is taken as input, instead of regular input",""],["storeResultInSessionKey","when set, the result is stored under this session key",""],["preserveInput","when set true, the input of a pipe is restored before processing the next one","false"],["namespaceAware","controls namespace-awareness of possible XML parsing in descender-classes","application default"],["sessionKey1","reference to one of the session variables to be compared",""],["sessionKey2","reference to the other session variables to be compared",""]],"children":[],"description":"Pipe that compares the integer values of two session variables.\n Used to in combination with IncreaseIntegerPipe to contstruct loops.\n\n "},"CompressPipe":{"_id":"5a3c1d79670a9fad1820b040","__v":0,"type":"pipes","classname":"CompressPipe","url":"","free":"true","attrs":{"classname":["nl.nn.ibis4fundation.BatchFileTransformerPipe"],"messageIsContent":["false"],"resultIsContent":["false"],"outputDirectory":[""],"filenamePattern":[""],"zipEntryPattern":[""],"compress":["false"],"convert2String":["false"],"fileFormat":[""]},"properties":[["classname","nl.nn.ibis4fundation.BatchFileTransformerPipe","nl.nn.ibis4fundation.BatchFileTransformerPipe"],["messageIsContent","Flag indicates whether the message is the content or the path to a file with the contents. For multiple files use ';' as delimiter","false"],["resultIsContent","Flag indicates whether the result must be written to the message or to a file (filename = message)","false"],["outputDirectory","Required if result is a file, the directory in which to store the result file",""],["filenamePattern","Required if result is a file, the pattern for the result filename",""],["zipEntryPattern","The pattern for the zipentry name in case a zipfile is read or written",""],["compress","If true the pipe compresses, otherwise it decompress","false"],["convert2String","If true result is returned as a string, otherwise as a byte array","false"],["fileFormat","When set to gz, the GZIP format is used. When set to another value, the ZIP format is used. If not set and direction is compress, the resultIsContent specifies the output format used (resultIsContent=\"true\" -&gt; GZIP format, resultIsContent=\"false\" -&gt; ZIP format) If not set and direction is decompress, the messageIsContent specifies the output format used (messageIsContent=\"true\" -&gt; GZIP format, messageIsContent=\"false\" -&gt; ZIP format)",""]],"children":[],"description":"Pipe to zip or unzip a message or file.  \n \n "},"CreateRestViewPipe":{"_id":"5a3c1d79670a9fad1820b042","__v":0,"type":"pipes","classname":"CreateRestViewPipe","url":"","free":"true","attrs":{"name":[""],"contentType":["\"text/html\""]},"properties":[["name","name of the Pipe",""],["contentType","content type of the servlet response","\"text/html\""]],"children":[],"description":"Create a view for RestlistenerDOT\n\n "},"CredentialCheckingPipe":{"_id":"5a3c1d79670a9fad1820b043","__v":0,"type":"pipes","classname":"CredentialCheckingPipe","url":"","free":"true","properties":[],"children":[],"description":"Pipe to check the the CredentialFactory (for testing only)."},"CrlPipe":{"_id":"5a3c1d79670a9fad1820b044","__v":0,"type":"pipes","classname":"CrlPipe","url":"","free":"true","attrs":{"name":[""],"issuerSessionKey":[""]},"properties":[["name","name of the Pipe",""],["issuerSessionKey","name of the sessionKey that holds a stream to the certificate of the issuer who signed the CRL. The steam is closed after reading",""]],"children":[],"description":"Pipe that reads a CRL from an input stream and transforms it to an XML.\n The steam is closed after reading.\n \n Example configuration:\n \n                <pipe\n                        name=\"Read issuer\"\n                        className=\"nl.nn.adapterframework.pipes.FilePipe\"\n                        actions=\"read\"\n                        fileName=\"dir/issuer.cer\"\n                        preserveInput=\"true\"\n                        outputType=\"stream\"\n                        storeResultInSessionKey=\"issuer\"\n                        >\n                        \n                \n                <pipe\n                        name=\"Read CRL\"\n                        className=\"nl.nn.adapterframework.pipes.FilePipe\"\n                        actions=\"read\"\n                        fileName=\"dir/CRL.crl\"\n                        outputType=\"stream\"\n                        >\n                        \n                \n                <pipe\n                        name=\"Transform CRL\"\n                        className=\"nl.nn.adapterframework.pipes.CrlPipe\"\n                        issuerSessionKey=\"issuer\"\n                        >\n                        \n                \n \n \n "},"DelayPipe":{"_id":"5a3c1d79670a9fad1820b045","__v":0,"type":"pipes","classname":"DelayPipe","url":"","free":"true","attrs":{"name":[""],"delayTime":["5000 [ms]"]},"properties":[["name","name of the Pipe",""],["delayTime","the time the thread will be put to sleep","5000 [ms]"]],"children":[],"description":"Pipe that sleeps for a specified time, which defaults to 5000 msecs.\n Usefull for testing purposes.\n \n "},"DigesterPipe":{"_id":"5a3c1d79670a9fad1820b046","__v":0,"type":"pipes","classname":"DigesterPipe","url":"","free":"true","attrs":{"name":[""],"maxThreads":["0 (unlimited)"],"forwardName":["\"success\""],"digesterRulesFile":["(none)"]},"properties":[["name","name of the Pipe",""],["maxThreads","maximum number of threads that may call doPipe(java.lang.Object, nl.nn.adapterframework.core.IPipeLineSession) simultaneously","0 (unlimited)"],["forwardName","name of forward returned upon completion","\"success\""],["digesterRulesFile","name of file that containts the rules for xml parsing","(none)"]],"children":[],"description":"Converts an XML string (input) to a set of java objects using the\n digester.\n "},"DomainTransformerPipe":{"_id":"5a3c1d79670a9fad1820b047","__v":0,"type":"pipes","classname":"DomainTransformerPipe","url":"","free":"true","attrs":{"name":[""],"jmsRealm":[""],"tableName":["mapping"],"labelField":["label"],"valueInField":["valueIn"],"valueOutField":["valueOut"]},"properties":[["name","name of the Pipe",""],["jmsRealm","",""],["tableName","the name of the table that contains the mapping","mapping"],["labelField","the name of the column labels are stored in","label"],["valueInField","the name of the column source values are stored in","valueIn"],["valueOutField","the name of the column destination values are stored in","valueOut"]],"children":[],"description":"Pipe that performs domain transforming on the basis of a database table.\n\n Every string which equals \"%![DT{label,valueIn,type}]\" will be replaced by valueOut. \n \n The field type, which is optional, indicates the format of valueIn. Currently the following types are supported:\n \n \n   string (default): the methode setString() is used\n   number: the method setDouble() is used \n \n  \n "},"EchoPipe":{"_id":"5a3c1d79670a9fad1820b048","__v":0,"type":"pipes","classname":"EchoPipe","url":"","free":"true","attrs":{"name":[""],"maxThreads":["0 (unlimited)"],"forwardName":["\"success\""]},"properties":[["name","name of the Pipe",""],["maxThreads","maximum number of threads that may call doPipe(java.lang.Object, nl.nn.adapterframework.core.IPipeLineSession) simultaneously","0 (unlimited)"],["forwardName","name of forward returned upon completion","\"success\""]],"children":[],"description":"Returns simply the input message.\n\n "},"EscapePipe":{"_id":"5a3c1d79670a9fad1820b04a","__v":0,"type":"pipes","classname":"EscapePipe","url":"","free":"true","attrs":{"name":[""],"direction":["encode"],"substringStart":[""],"substringEnd":[""],"decodeSubstring":["false"]},"properties":[["name","name of the Pipe",""],["direction","either encode, decode or cdata2text","encode"],["substringStart","substring to start translation",""],["substringEnd","substring to end translation",""],["decodeSubstring","when set true special characters in substringStart and substringEnd are first translated to their xml equivalents","false"]],"children":[],"description":"Pipe that performs translations between special characters and their xml equivalents.\n "},"ExceptionPipe":{"_id":"5a3c1d79670a9fad1820b04c","__v":0,"type":"pipes","classname":"ExceptionPipe","url":"","free":"true","attrs":{"throwException":["true"]},"properties":[["throwException","when true, a PipeRunException is thrown. Otherwise the output is only logged as an error (and no rollback is performed).","true"]],"children":[],"description":"Pipe that throws an exception, based on the input message.\n \n "},"ExchangeMailListener":{"_id":"5a3c1d79670a9fad1820b04d","__v":0,"type":"receivers","classname":"ExchangeMailListener","url":"","free":"true","attrs":{"name":[""],"userName":[""],"password":[""],"mailAddress":[""],"url":[""],"storeEmailAsStreamInSessionKey":[""]},"properties":[["name","name of the listener",""],["userName","username used in authentication to exchange mail server",""],["password","",""],["mailAddress","mail address (also used for auto discovery)",""],["url","(only used when mailAddress is empty) url of the service",""],["storeEmailAsStreamInSessionKey","if set, the mail is streamed to a file (eml)",""]],"children":[],"description":"Implementation of a IPullingListener that enables a\n GenericReceiver to look in a folder\n for received mails. When a mail is found, it is moved to an output folder (or\n it's deleted), so that it isn't found more then once. A xml string with\n information about the mail is passed to the pipeline.\n \n "},"ExecutePipe":{"_id":"5a3c1d79670a9fad1820b04e","__v":0,"type":"pipes","classname":"ExecutePipe","url":"","free":"true","attrs":{"command":[""],"commandSessionKey":[""]},"properties":[["command","The command to execute (if command and commandSessionKey are empty, the command is taken from the input of the pipe)",""],["commandSessionKey","The session key that holds the command to execute",""]],"children":[],"description":"Deprecated.&nbsp;\nplease use CommandSender\n\n\npublic class ExecutePipe\nextends FixedForwardPipe\nExecutes a command.\n \n "},"FileLineIteratorPipe":{"_id":"5a3c1d79670a9fad1820b04f","__v":0,"type":"pipes","classname":"FileLineIteratorPipe","url":"","free":"true","attrs":{"classname":["nl.nn.adapterframework.pipes.FileLineIteratorPipe"],"move2dirAfterTransform":[""],"move2dirAfterError":[""]},"properties":[["classname","nl.nn.adapterframework.pipes.FileLineIteratorPipe","nl.nn.adapterframework.pipes.FileLineIteratorPipe"],["move2dirAfterTransform","Directory in which the transformed file(s) is stored",""],["move2dirAfterError","Directory to which the inputfile is moved in case an error occurs",""]],"children":[],"description":"Sends a message to a Sender for each line of the file that the input message refers to.\n \n "},"FilenameSwitch":{"_id":"5a3c1d79670a9fad1820b050","__v":0,"type":"pipes","classname":"FilenameSwitch","url":"","free":"true","attrs":{"name":[""],"getInputFromSessionKey":[""],"storeResultInSessionKey":[""],"toLowercase":["true"],"classname":["nl.nn.adapterframework.pipes.FilenameSwitch"]},"properties":[["className","nl.nn.adapterframework.pipes.FilenameSwitch","nl.nn.adapterframework.pipes.FilenameSwitch"],["name","name of the Pipe",""],["getInputFromSessionKey","when set, input is taken from this session key, instead of regular input",""],["storeResultInSessionKey","when set, the result is stored under this session key",""],["toLowercase","convert the result to lowercase, before searching for a corresponding forward","true"]],"children":[],"description":"Selects an exitState, based on the last (filename) part of the path that is the input.\n \n "},"FixedForwardPipe":{"_id":"5a3c1d79670a9fad1820b052","__v":0,"type":"pipes","classname":"FixedForwardPipe","url":"","free":"true","attrs":{"name":[""],"maxThreads":["0 (unlimited)"],"durationThreshold":["-1"],"getInputFromSessionKey":[""],"getInputFromFixedValue":[""],"emptyInputReplacement":[""],"storeResultInSessionKey":[""],"preserveInput":["false"],"namespaceAware":["application default"],"forwardName":["\"success\""],"skipOnEmptyInput":["false"],"ifParam":[""],"ifValue":[""],"classname":["nl.nn.adapterframework.pipes.FixedForwardPipe"]},"properties":[["className","nl.nn.adapterframework.pipes.FixedForwardPipe","nl.nn.adapterframework.pipes.FixedForwardPipe"],["name","name of the Pipe",""],["maxThreads","maximum number of threads that may call AbstractPipe.doPipe(java.lang.Object, nl.nn.adapterframework.core.IPipeLineSession) simultaneously","0 (unlimited)"],["durationThreshold","if durationThreshold &gt;=0 and the duration (in milliseconds) of the message processing exceeded the value specified, then the message is logged informatory","-1"],["getInputFromSessionKey","when set, input is taken from this session key, instead of regular input",""],["getInputFromFixedValue","when set, this fixed value is taken as input, instead of regular input",""],["emptyInputReplacement","when set and the regular input is empty, this fixed value is taken as input",""],["storeResultInSessionKey","when set, the result is stored under this session key",""],["preserveInput","when set true, the input of a pipe is restored before processing the next one","false"],["namespaceAware","controls namespace-awareness of possible XML parsing in descender-classes","application default"],["forwardName","name of forward returned upon completion","\"success\""],["skipOnEmptyInput","when set, this pipe is skipped","false"],["ifParam","when set, this pipe is only executed when the value of parameter with name ifParam equals ifValue (otherwise this pipe is skipped)",""],["ifValue","see ifParam",""]],"children":[],"description":"Provides a base-class for a Pipe that always has the same forward.\n Ancestor classes should call super.configure() in their configure()-methods.\n\n "},"FixedResult":{"_id":"5a3c1d79670a9fad1820b053","__v":0,"type":"pipes","classname":"FixedResult","url":"","free":"true","attrs":{"name":[""],"maxThreads":["0 (unlimited)"],"forwardName":["\"success\""],"fileName":[""],"fileNameSessionKey":[""],"returnString":[""],"substituteVars":["False"],"replaceFrom":[""],"replaceTo":[""],"styleSheetName":[""],"lookupAtRuntime":["false"],"replaceFixedParams":["false"],"classname":["nl.nn.adapterframework.pipes.FixedResult"]},"properties":[["className","nl.nn.adapterframework.pipes.FixedResult","nl.nn.adapterframework.pipes.FixedResult"],["name","name of the Pipe",""],["maxThreads","maximum number of threads that may call doPipe(java.lang.Object, nl.nn.adapterframework.core.IPipeLineSession) simultaneously","0 (unlimited)"],["forwardName","name of forward returned upon completion","\"success\""],["fileName","name of the file containing the resultmessage",""],["fileNameSessionKey","name of the session key containing the file name of the file containing the result message",""],["returnString","returned message",""],["substituteVars","Should values between ${ and } be resolved from the PipeLineSession (search order: 1) system properties 2) pipeLineSession variables 3) application properties)","False"],["replaceFrom","string to search for in the returned message",""],["replaceTo","string that will replace each of the strings found in the returned message",""],["styleSheetName","stylesheet to apply to the output message",""],["lookupAtRuntime","when set true, the lookup of the file will be done at runtime instead of at configuration time","false"],["replaceFixedParams","when set true, any parameter is used for replacements but with name-of-parameter and not ${name-of-parameter}","false"]],"children":[],"description":"Provides an example of a pipe. It may return the contents of a file\n (in the classpath) when fileName or fileNameSessionKey is specified, otherwise the\n input of returnString is returned.\n\n "},"FixedResultSender":{"_id":"5a3c1d79670a9fad1820b054","__v":0,"type":"pipes","classname":"FixedResultSender","url":"","free":"true","properties":[],"children":[],"description":"Deprecated.&nbsp;\nThis sender has been moved to the senders-package."},"ForEachChildElementPipe":{"_id":"5a3c1d79670a9fad1820b055","__v":0,"type":"pipes","classname":"ForEachChildElementPipe","url":"","free":"true","attrs":{"elementXPathExpression":[""],"processFile":["application default"],"charset":["UTF-8"],"xslt2":["false"],"classname":["nl.nn.adapterframework.pipes.ForEachChildElementPipe"]},"properties":[["className","nl.nn.adapterframework.pipes.ForEachChildElementPipe","nl.nn.adapterframework.pipes.ForEachChildElementPipe"],["elementXPathExpression","expression used to determine the set of elements iterated over, i.e. the set of child elements",""],["processFile","when set true, the input is assumed to be the name of a file to be processed. Otherwise, the input itself is transformed","application default"],["charset","characterset used for reading file or inputstream, only used when processFile is true, or the input is of type InputStream","UTF-8"],["xslt2","when set true XSLT processor 2.0 (net.sf.saxon) will be used for elementXPathExpression, otherwise XSLT processor 1.0 (org.apache.xalan)","false"]],"children":[],"description":"Sends a message to a Sender for each child element of the input XML.\n Input can be a String containing XML, a filename (set processFile true), an InputStream or a Reader.\n \n "},"GenericMessageSendingPipe":{"_id":"5a3c1d79670a9fad1820b056","__v":0,"type":"pipes","classname":"GenericMessageSendingPipe","url":"","free":"true","attrs":{"name":[""],"maxThreads":["0 (unlimited)"],"stubFileName":[""],"durationThreshold":["-1"],"getInputFromSessionKey":[""],"storeResultInSessionKey":[""],"checkXmlWellFormed":["false"],"checkRootTag":[""],"preserveInput":["false"],"namespaceAware":["application default"],"forwardName":["\"success\""],"resultOnTimeOut":[""],"linkMethod":["CORRELATIONID"],"auditTrailXPath":[""],"correlationIDXPath":[""],"classname":["nl.nn.adapterframework.pipes.GenericMessageSendingPipe"]},"properties":[["className","nl.nn.adapterframework.pipes.GenericMessageSendingPipe","nl.nn.adapterframework.pipes.GenericMessageSendingPipe"],["name","name of the Pipe",""],["maxThreads","maximum number of threads that may call MessageSendingPipe.doPipe(java.lang.Object, nl.nn.adapterframework.core.IPipeLineSession) simultaneously","0 (unlimited)"],["stubFileName","when set, the Pipe returns a message from a file, instead of doing the regular process",""],["durationThreshold","if durationThreshold &gt;=0 and the duration (in milliseconds) of the message processing exceeded the value specified the message is logged informatory","-1"],["getInputFromSessionKey","when set, input is taken from this session key, instead of regular input",""],["storeResultInSessionKey","when set, the result is stored under this session key",""],["checkXmlWellFormed","when set true, the XML well-formedness of the result is checked","false"],["checkRootTag","when set, besides the XML well-formedness the root element of the result is checked to be equal to the value set",""],["preserveInput","when set true, the input of a pipe is restored before processing the next one","false"],["namespaceAware","controls namespaceAwarenes for parameters","application default"],["forwardName","name of forward returned upon completion","\"success\""],["resultOnTimeOut","result returned when no return-message was received within the timeout limit (e.g. \"receiver timed out\").",""],["linkMethod","Indicates wether the server uses the correlationID or the messageID in the correlationID field of the reply","CORRELATIONID"],["auditTrailXPath","xpath expression to extract audit trail from message",""],["correlationIDXPath","xpath expression to extract correlationID from message",""]],"children":[],"description":"Plain extension to MessageSendingPipe that can be used directly in configurations.\n Only extension is that the setters for listener and sender have been made public, and can therefore\n be set from the configuration file.\n "},"GetFromSession":{"_id":"5a3c1d79670a9fad1820b057","__v":0,"type":"pipes","classname":"GetFromSession","url":"","free":"true","attrs":{"name":[""],"maxThreads":["0 (unlimited)"],"forwardName":["\"success\""],"sessionKey":[""]},"properties":[["name","name of the Pipe",""],["maxThreads","maximum number of threads that may call doPipe(java.lang.Object, nl.nn.adapterframework.core.IPipeLineSession) simultaneously","0 (unlimited)"],["forwardName","name of forward returned upon completion","\"success\""],["sessionKey","name of the key in the PipeLineSession to retrieve the output message from",""]],"children":[],"description":"Gets the contents of the pipeLineSession by a key specified by\n sessionKey.\n\n "},"GetLtpaTokenPipe":{"_id":"5a3c1d79670a9fad1820b058","__v":0,"type":"pipes","classname":"GetLtpaTokenPipe","url":"","free":"true","attrs":{"name":[""],"forwardName":["\"success\""],"storeResultInSessionKey":[""],"preserveInput":["false"]},"properties":[["name","name of the Pipe",""],["forwardName","name of forward returned upon completion","\"success\""],["storeResultInSessionKey","when set, the result is stored under this session key",""],["preserveInput","when set true, the input of a pipe is restored before processing the next one","false"]],"children":[],"description":"Returns the LTPA token associated with the session.\n\n "},"GetPrincipalPipe":{"_id":"5a3c1d79670a9fad1820b059","__v":0,"type":"pipes","classname":"GetPrincipalPipe","url":"","free":"true","attrs":{"name":[""],"maxThreads":["0 (unlimited)"],"forwardName":["\"success\""],"getInputFromSessionKey":[""],"storeResultInSessionKey":[""],"preserveInput":["false"]},"properties":[["name","name of the Pipe",""],["maxThreads","maximum number of threads that may call doPipe(java.lang.Object, nl.nn.adapterframework.core.IPipeLineSession) simultaneously","0 (unlimited)"],["forwardName","name of forward returned upon completion","\"success\""],["getInputFromSessionKey","when set, input is taken from this session key, instead of regular input",""],["storeResultInSessionKey","when set, the result is stored under this session key",""],["preserveInput","when set true, the input of a pipe is restored before processing the next one","false"]],"children":[],"description":"Returns the name of the user executing the request.\n\n "},"IfMultipart":{"_id":"5a3c1d79670a9fad1820b05a","__v":0,"type":"pipes","classname":"IfMultipart","url":"","free":"true","properties":[],"children":[],"description":"Selects an exitState, based on the content-type of a httpServletRequest\n object as input."},"IncreaseIntegerPipe":{"_id":"5a3c1d79670a9fad1820b05b","__v":0,"type":"pipes","classname":"IncreaseIntegerPipe","url":"","free":"true","attrs":{"name":[""],"maxThreads":["0 (unlimited)"],"durationThreshold":["-1"],"getInputFromSessionKey":[""],"storeResultInSessionKey":[""],"preserveInput":["false"],"namespaceAware":["application default"],"forwardName":["\"success\""],"sessionKey":[""],"increment":["1"],"classname":["nl.nn.adapterframework.pipes.IncreaseIntegerPipe"]},"properties":[["className","nl.nn.adapterframework.pipes.IncreaseIntegerPipe","nl.nn.adapterframework.pipes.IncreaseIntegerPipe"],["name","name of the Pipe",""],["maxThreads","maximum number of threads that may call doPipe(java.lang.Object, nl.nn.adapterframework.core.IPipeLineSession) simultaneously","0 (unlimited)"],["durationThreshold","if durationThreshold &gt;=0 and the duration (in milliseconds) of the message processing exceeded the value specified, then the message is logged informatory","-1"],["getInputFromSessionKey","when set, input is taken from this session key, instead of regular input",""],["storeResultInSessionKey","when set, the result is stored under this session key",""],["preserveInput","when set true, the input of a pipe is restored before processing the next one","false"],["namespaceAware","controls namespace-awareness of possible XML parsing in descender-classes","application default"],["forwardName","name of forward returned upon completion","\"success\""],["sessionKey","reference to the session variable whose value is to be increased",""],["increment","amount to increment the value","1"]],"children":[],"description":"Pipe that increases the integer values of a session variable.\n Used to in combination with CompareIntegerPipe to contstruct loops.\n\n "},"IsolatedServiceCaller":{"_id":"5a3c1d79670a9fad1820b05c","__v":0,"type":"pipes","classname":"IsolatedServiceCaller","url":"","free":"true","properties":[],"children":[],"description":"Helper class for IbisLocalSender that wraps around ServiceDispatcher to make calls to a local Ibis adapter in a separate thread."},"IsolatedServiceExecutor":{"_id":"5a3c1d79670a9fad1820b05d","__v":0,"type":"pipes","classname":"IsolatedServiceExecutor","url":"","free":"true","properties":[],"children":[],"description":"no description available"},"IsUserInRolePipe":{"_id":"5a3c1d79670a9fad1820b05e","__v":0,"type":"pipes","classname":"IsUserInRolePipe","url":"","free":"true","attrs":{"name":[""],"forwardName":["\"success\""],"notInRoleForwardName":["\"notInRole\""],"role":[""]},"properties":[["name","name of the Pipe",""],["forwardName","name of forward returned if user has role","\"success\""],["notInRoleForwardName","name of forward returned if user is not allowed to assume the specified role","\"notInRole\""],["role","the J2EE role to check. ",""]],"children":[],"description":"Pipe that checks if the calling user has a specified role. \n Uses the PipeLineSessions methods.\n "},"IsXmlIfPipe":{"_id":"5a3c1d79670a9fad1820b05f","__v":0,"type":"pipes","classname":"IsXmlIfPipe","url":"","free":"true","attrs":{"name":[""],"elseForwardName":["else"],"elseForwardOnEmptyInput":["true"],"classname":["nl.nn.adapterframework.pipes.IsXmlIfPipe"]},"properties":[["className","nl.nn.adapterframework.pipes.IsXmlIfPipe","nl.nn.adapterframework.pipes.IsXmlIfPipe"],["name","name of the Pipe",""],["elseForwardName","forward returned when 'false'","else"],["elseForwardOnEmptyInput","return elseForward when input is empty (or thenForward)","true"]],"children":[],"description":"Selects an exitState, based on if the input is a XML string.\n \n The input is a XML string if it, after removing leading white-space characters, starts with '<'.\n \n "},"JsonPipe":{"_id":"5a3c1d79670a9fad1820b063","__v":0,"type":"pipes","classname":"JsonPipe","url":"","free":"true","attrs":{"direction":["json2xml"],"version":["1"],"addXmlRootElement":["true"],"classname":["nl.nn.adapterframework.pipes.JsonPipe"]},"properties":[["className","nl.nn.adapterframework.pipes.JsonPipe","nl.nn.adapterframework.pipes.JsonPipe"],["direction","Direction of the transformation. Either json2xml or xml2json","json2xml"],["version","Version of the jsonpipe. Either 1 or 2.","1"],["addXmlRootElement","when true, and direction is json2xml, it wraps a root element around the converted message","true"]],"children":[],"description":"Perform an JSON to XML transformation\n \n "},"PutParametersInSession":{"_id":"5a3c1d79670a9fad1820b06e","__v":0,"type":"pipes","classname":"PutParametersInSession","url":"","free":"true","attrs":{"name":[""]},"properties":[["name","name of the Pipe",""]],"children":[],"description":"Puts each parameter value in the PipeLineSession, under the key specified by the parameter name.\n\n "},"IteratingPipe":{"_id":"5a3c1d79670a9fad1820b060","__v":0,"type":"pipes","classname":"IteratingPipe","url":"","free":"true","attrs":{"name":[""],"parallel":["false"],"durationThreshold":["-1"],"getInputFromSessionKey":[""],"storeResultInSessionKey":[""],"checkXmlWellFormed":["false"],"preserveInput":["false"],"namespaceAware":["application default"],"forwardName":["\"success\""],"resultOnTimeOut":[""],"linkMethod":["CORRELATIONID"],"auditTrailXPath":[""],"correlationIDXPath":[""],"styleSheetName":[""],"xpathExpression":[""],"namespaceDefs":[""],"outputType":["text"],"omitXmlDeclaration":["true"],"ignoreExceptions":["false"],"removeXmlDeclarationInResults":["false"],"collectResults":["true"],"blockSize":["0 (one line at a time, no prefix of suffix)"],"blockPrefix":["&lt;block&gt;"],"blockSuffix":["&lt;/block&gt;"],"startPosition":["-1"],"endPosition":["-1"],"linePrefix":[""],"lineSuffix":[""],"itemNoSessionKey":[""],"addInputToResult":["false"],"removeDuplicates":["false"],"classname":["nl.nn.adapterframework.pipes.IteratingPipe"]},"properties":[["className","nl.nn.adapterframework.pipes.IteratingPipe","nl.nn.adapterframework.pipes.IteratingPipe"],["name","name of the Pipe",""],["parallel"," when set true, the calls for all items are done in parallel (a new thread is started for each call). When collectResults set true, this pipe will wait for all calls to finish before results are collected and pipe result is returned","false"],["durationThreshold","if durationThreshold &gt;=0 and the duration (in milliseconds) of the message processing exceeded the value specified the message is logged informatory","-1"],["getInputFromSessionKey","when set, input is taken from this session key, instead of regular input",""],["storeResultInSessionKey","when set, the result is stored under this session key",""],["checkXmlWellFormed","when set true, the XML well-formedness of the result is checked","false"],["preserveInput","when set true, the input of a pipe is restored before processing the next one","false"],["namespaceAware","controls namespaceAwareness for parameters","application default"],["forwardName","name of forward returned upon completion","\"success\""],["resultOnTimeOut","result returned when no return-message was received within the timeout limit (e.g. \"receiver timed out\").",""],["linkMethod","Indicates wether the server uses the correlationID or the messageID in the correlationID field of the reply","CORRELATIONID"],["auditTrailXPath","xpath expression to extract audit trail from message",""],["correlationIDXPath","xpath expression to extract correlationID from message",""],["styleSheetName","stylesheet to apply to each message, before sending it",""],["xpathExpression","alternatively: XPath-expression to create stylesheet from",""],["namespaceDefs","namespace defintions for xpathExpression. Must be in the form of a comma or space separated list of prefix=namespaceuri-definitions",""],["outputType","either 'text' or 'xml'. Only valid for xpathExpression","text"],["omitXmlDeclaration","force the transformer generated from the XPath-expression to omit the xml declaration","true"],["ignoreExceptions","when true ignore any exception thrown by executing sender","false"],["removeXmlDeclarationInResults","postprocess each partial result, to remove the xml-declaration, as this is not allowed inside an xml-document","false"],["collectResults","controls whether all the results of each iteration will be collected in one result message. If set false, only a small summary is returned","true"],["blockSize","controls multiline behaviour. when set to a value greater than 0, it specifies the number of rows send in a block to the senderDOT","0 (one line at a time, no prefix of suffix)"],["blockPrefix","When blockSize &gt; 0, this string is inserted at the start of the set of lines.","&lt;block&gt;"],["blockSuffix","When blockSize &gt; 0, this string is inserted at the end of the set of lines.","&lt;/block&gt;"],["startPosition","When startPosition &gt;= 0, this field contains the start position of the key in the current record (first character is 0); all sequenced lines with the same key are put in one block and send to the sender","-1"],["endPosition","When endPosition &gt;= startPosition, this field contains the end position of the key in the current record","-1"],["linePrefix","this string is inserted at the start of each line",""],["lineSuffix","this string is inserted at the end of each line",""],["itemNoSessionKey","key of session variable to store number of item processed.",""],["addInputToResult","when true the input is added to the result in an input element","false"],["removeDuplicates","when true duplicate input elements are removed","false"]],"children":[],"description":"Abstract base class to sends a message to a Sender for each item returned by a configurable iterator.\n \n "},"JmsCommunicator":{"_id":"5a3c1d79670a9fad1820b061","__v":0,"type":"pipes","classname":"JmsCommunicator","url":"","free":"true","attrs":{"name":[""],"maxThreads":["0 (unlimited)"],"forwardName":["\"success\""],"resultOnTimeOut":[""],"senderreplyToName":[""],"senderDOTName":[""],"senderDOTdestinationName":[""],"senderDOTdestinationType":[""],"senderDOTacknowledgeMode":[""],"senderDOTpersistent":[""],"senderjmsRealm":[""]},"properties":[["name","name of the Pipe",""],["maxThreads","maximum number of threads that may call MessageSendingPipe.doPipe(java.lang.Object, nl.nn.adapterframework.core.IPipeLineSession) simultaneously","0 (unlimited)"],["forwardName","name of forward returned upon completion","\"success\""],["resultOnTimeOut","result returned when no return-message was received within the timeout limit (e.g. \"receiver timed out\").",""],["senderDOTreplyToName","name of the queue the receiving party should reply to, as included in the message that is sent",""],["senderDOTName","name of the sender object",""],["senderDOTdestinationName","",""],["senderDOTdestinationType","",""],["senderDOTacknowledgeMode","",""],["senderDOTpersistent","",""],["senderjmsRealm","",""]],"children":[],"description":"Deprecated.&nbsp;\nplease use GenericMessageSendingPipe with JmsSender (and if necessary JmsListener), that has same functionality\n\n\npublic class JmsCommunicator\nextends MessageSendingPipe\nSends a message (the PipeInput) to a Topic or Queue, \n  and receives a message from another Topic or Queue after the input message has been sent.\n\n If a listener is specified it waits for a reply with\n the correct correlationID.\n \n "},"Json2XmlValidator":{"_id":"5a3c1d79670a9fad1820b062","__v":0,"type":"pipes","classname":"Json2XmlValidator","url":"","free":"true","attrs":{"name":[""],"maxThreads":["0 (unlimited)"],"durationThreshold":["-1"],"getInputFromSessionKey":[""],"storeResultInSessionKey":[""],"schema":[""],"noNamespaceSchemaLocation":[""],"schemaLocation":[""],"schemaSessionKey":[""],"fullSchemaChecking":["false"],"throwException":["false"],"reasonSessionKey":["failureReason"],"xmlReasonSessionKey":["xmlFailureReason"],"root":[""],"validateFile":["false"],"charset":["UTF-8"],"soapNamespace":["http://schemas.xmlsoap.org/soap/envelope/"],"ignoreUnknownNamespaces":["true when schema or noNamespaceSchemaLocation is used, false otherwise"],"warn":["true"],"forwardFailureToSuccess":["false"],"addNamespaceToSchema":["false"],"importedSchemaLocationsToIgnore":[""],"useBaseImportedSchemaLocationsToIgnore":["false"],"importedNamespacesToIgnore":[""],"ignoreCaching":["false"],"lazyInit":["application default (false)"],"compactJsonArrays":["true"],"strictJsonArraySyntax":["false"],"jsonWithRootElements":["false"],"targetNamespace":[""],"outputFormat":["xml"],"autoFormat":["true"],"outputFormatSessionKey":["outputFormat"],"classname":["nl.nn.adapterframework.pipes.XmlValidator"]},"properties":[["className","nl.nn.adapterframework.pipes.XmlValidator","nl.nn.adapterframework.pipes.XmlValidator"],["name","name of the Pipe",""],["maxThreads","maximum number of threads that may call XmlValidator.doPipe(Object, IPipeLineSession) simultaneously","0 (unlimited)"],["durationThreshold","if durationThreshold &gt;=0 and the duration (in milliseconds) of the message processing exceeded the value specified the message is logged informatory","-1"],["getInputFromSessionKey","when set, input is taken from this session key, instead of regular input",""],["storeResultInSessionKey","when set, the result is stored under this session key",""],["schema","The filename of the schema on the classpath. See doc on the method. (effectively the same as noNamespaceSchemaLocation)",""],["noNamespaceSchemaLocation","A URI reference as a hint as to the location of a schema document with no target namespace. See doc on the method.",""],["schemaLocation","Pairs of URI references (one for the namespace name, and one for a hint as to the location of a schema document defining names for that namespace name). See doc on the method.",""],["schemaSessionKey","",""],["fullSchemaChecking","Perform addional memory intensive checks","false"],["throwException","Should the XmlValidator throw a PipeRunException on a validation error (if not, a forward with name \"failure\" should be defined.","false"],["reasonSessionKey","if set: key of session variable to store reasons of mis-validation in","failureReason"],["xmlReasonSessionKey","like reasonSessionKey but stores reasons in xml format and more extensive","xmlFailureReason"],["root","name of the root element. Or a comma separated list of names to choose from (only one is allowed)",""],["validateFile","when set true, the input is assumed to be the name of the file to be validated. Otherwise the input itself is validated","false"],["charset","characterset used for reading file, only used when validateFile is true","UTF-8"],["soapNamespace","the namespace of the SOAP Envelope, when this property has a value and the input message is a SOAP Message the content of the SOAP Body is used for validation, hence the SOAP Envelope and SOAP Body elements are not considered part of the message to validate. Please note that this functionality is deprecated, using nl.nn.adapterframework.soap.SoapValidator2 is now the preferred solution in case a SOAP Message needs to be validated, in other cases give this property an empty value","http://schemas.xmlsoap.org/soap/envelope/"],["ignoreUnknownNamespaces","ignore namespaces in the input message which are unknown","true when schema or noNamespaceSchemaLocation is used, false otherwise"],["warn","when set true, send warnings to logging and console about syntax problems in the configured schema('s)","true"],["forwardFailureToSuccess","when set true, the failure forward is replaced by the success forward (like a warning mode)","false"],["addNamespaceToSchema","when set true, the namespace from schemaLocation is added to the schema document as targetNamespace","false"],["importedSchemaLocationsToIgnore","comma separated list of schemaLocations which are excluded from an import or include in the schema document",""],["useBaseImportedSchemaLocationsToIgnore","when set true, the comparison for importedSchemaLocationsToIgnore is done on base filename without any path","false"],["importedNamespacesToIgnore","comma separated list of namespaces which are excluded from an import or include in the schema document",""],["ignoreCaching","when set true, the number for caching validators in AppConstants is ignored and NO caching is done (for this validator only)","false"],["lazyInit","when set, the value in AppConstants is overwritten (for this validator only)","application default (false)"],["compactJsonArrays","when true assume arrays in json do not have the element containers like in XML","true"],["strictJsonArraySyntax","when true check that incoming json adheres to the specified syntax (compact or full), otherwise both types are accepted for conversion from json to xml","false"],["jsonWithRootElements","when true, assume that JSON contains/must contain a root element","false"],["targetNamespace","Ony for JSON input: namespace of the resulting XML. Need only be specified when the namespace of root name is ambiguous in the Schema",""],["outputFormat","default format of the result. Either 'xml' or 'json'","xml"],["autoFormat","when true, the format on 'output' is set to the same as the format of the input message on 'input'","true"],["outputFormatSessionKey","session key to retrieve outputFormat from.","outputFormat"]],"children":[],"description":"Pipe that validates the XML or JSON input message against a XML-Schema and returns either XML or JSON.\n\n "},"LogSender":{"_id":"5a3c1d79670a9fad1820b064","__v":0,"type":"pipes","classname":"LogSender","url":"","free":"true","attrs":{"logLevel":["info"],"logCategory":["name of the sender"]},"properties":[["logLevel","level on which messages are logged","info"],["logCategory","category under which messages are logged","name of the sender"]],"children":[],"description":"Deprecated.&nbsp;\nPlease replace with nl.nn.adapterframework.senders.LogSender\n\n\npublic class LogSender\nextends LogSender\nSender that just logs its message.\n \n "},"MailSender":{"_id":"5a3c1d79670a9fad1820b065","__v":0,"type":"pipes","classname":"MailSender","url":"","free":"true","attrs":{"smtpHost":[""],"smtpAuthAlias":[""],"smtpUserid":[""],"smtpPassword":[""],"defaultFrom":[""],"defaultSubject":[""],"defaultAttachmentType":["text"],"defaultAttachmentName":["attachment"],"from":["email address of the sender"],"subject":["subject field of the message"],"message":["message itself. If absent, the complete input message is assumed to be the message"],"messageType":["message MIME type (at this moment only available are text/plain and text/html - default: text/plain)"],"messageBase64":["indicates whether the message content is base64 encoded (default: false)"]},"properties":[["smtpHost","name of the host by which the messages are to be send",""],["smtpAuthAlias","alias used to obtain credentials for authentication to smtpHost",""],["smtpUserid","userid on the smtpHost",""],["smtpPassword","password of userid on the smtpHost",""],["defaultFrom","value of the From: header if not specified in message itself",""],["defaultSubject","value of the Subject: header if not specified in message itself",""],["defaultAttachmentType","","text"],["defaultAttachmentName","","attachment"],["from","string","email address of the sender"],["subject","string","subject field of the message"],["message","string","message itself. If absent, the complete input message is assumed to be the message"],["messageType","string","message MIME type (at this moment only available are text/plain and text/html - default: text/plain)"],["messageBase64","boolean","indicates whether the message content is base64 encoded (default: false)"]],"children":[],"description":"Deprecated.&nbsp;\nPlease replace with nl.nn.adapterframework.senders.MailSender\n\n\npublic class MailSender\nextends MailSender\nsender that sends a mail specified by an XML message. \n\n Sample email.xml:\n        &lt;email&gt;\n            &lt;recipients&gt;\n                &lt;recipient type=\"to\"&gt;***@natned&lt;/recipient&gt;\n                &lt;recipient type=\"cc\"&gt;***@nn.nl&lt;/recipient&gt;\n            &lt;/recipients&gt;\n            &lt;from&gt;***@nn.nl&lt;/from&gt;\n            &lt;subject&gt;this is the subject&lt;/subject&gt;\n            &lt;message&gt;dit is de message&lt;/message&gt;\n            &lt;attachments&gt;\n                &lt;attachment name=\"filename1.txt\" type=\"text\"&gt;contents of first attachment&lt;/attachment&gt;\n                &lt;attachment name=\"filename2.txt\" type=\"text\" url=\"url-to-resource\" base64=\"false\"&gt;this is an attachment with a resource&lt;/attachment&gt;\n            &lt;/attachments&gt;\n        &lt;/email&gt;\n  \n Notice: it must be valid XML. Therefore, especially the message element\n must be plain text or be wrapped as CDATA.\n example:\n &lt;message&gt;&lt;![CDATA[&lt;h1&gt;This is a HtmlMessage&lt;/h1&gt;]]&gt;&lt;/message&gt;\n \n\n "},"MailSenderPipe":{"_id":"5a3c1d79670a9fad1820b066","__v":0,"type":"pipes","classname":"MailSenderPipe","url":"","free":"true","attrs":{"forwardName":["\"success\""],"senderDOTsmtpHost":[""],"senderDOTsmtpUserid":[""],"senderDOTsmtpPassword":[""],"senderDOTdefaultFrom":[""],"senderDOTdefaultSubject":[""]},"properties":[["forwardName","name of forward returned upon completion","\"success\""],["senderDOTsmtpHost","name of the host by which the messages are to be send",""],["senderDOTsmtpUserid","userid on the smtpHost",""],["senderDOTsmtpPassword","password of userid on the smtpHost",""],["senderDOTdefaultFrom","value of the From: header if not specified in message itself",""],["senderDOTdefaultSubject","value of the Subject: header if not specified in message itself",""]],"children":[],"description":"Pipe that sends a mail-message using a MailSender as its senderDOT\n \n Sample email.xml:\n        &lt;email&gt;\n            &lt;recipients&gt;\n                &lt;recipient&gt;***@natned&lt;/recipient&gt;\n                &lt;recipient&gt;***@nn.nl&lt;/recipient&gt;\n            &lt;/recipients&gt;\n            &lt;from&gt;***@nn.nl&lt;/from&gt;\n            &lt;subject&gt;this is the subject&lt;/subject&gt;\n            &lt;message&gt;dit is de message&lt;/message&gt;\n        &lt;/email&gt;\n  \n Notice: it must be valid XML. Therefore, especially the message element\n must be plain text or be wrapped as CDATA.\n example:\n &lt;message&gt;&lt;![CDATA[&lt;h1&gt;This is a HtmlMessage&lt;/h1&gt;]]&gt;&lt;/message&gt;\n \n\n "},"MessageSendingPipe":{"_id":"5a3c1d79670a9fad1820b067","__v":0,"type":"pipes","classname":"MessageSendingPipe","url":"","free":"true","attrs":{"name":[""],"maxThreads":["0 (unlimited)"],"stubFileName":[""],"durationThreshold":["-1"],"getInputFromSessionKey":[""],"storeResultInSessionKey":[""],"checkXmlWellFormed":["false"],"checkRootTag":[""],"preserveInput":["false"],"namespaceAware":["application default"],"forwardName":["\"success\""],"resultOnTimeOut":[""],"linkMethod":["CORRELATIONID"],"auditTrailXPath":[""],"auditTrailNamespaceDefs":[""],"auditTrailSessionKey":[""],"correlationIDXPath":[""],"correlationIDNamespaceDefs":[""],"correlationIDStyleSheet":[""],"correlationIDSessionKey":[""],"hideRegex":[""],"hideMethod":["\"all\""],"labelXPath":[""],"labelNamespaceDefs":[""],"labelStyleSheet":[""],"timeOutOnResult":[""],"exceptionOnResult":[""],"maxRetries":["0"],"retryMinInterval":["1"],"retryMaxInterval":["600"],"retryXPath":[""],"retryNamespaceDefs":[""],"useInputForExtract":["true"],"streamResultToServlet":["false"],"presumedTimeOutInterval":["10 s"],"senderDOT*":[""],"classname":["nl.nn.adapterframework.pipes.MessageSendingPipe"]},"properties":[["className","nl.nn.adapterframework.pipes.MessageSendingPipe","nl.nn.adapterframework.pipes.MessageSendingPipe"],["name","name of the Pipe",""],["maxThreads","maximum number of threads that may call doPipe(java.lang.Object, nl.nn.adapterframework.core.IPipeLineSession) simultaneously","0 (unlimited)"],["stubFileName","when set, the Pipe returns a message from a file, instead of doing the regular process",""],["durationThreshold","if durationThreshold &gt;=0 and the duration (in milliseconds) of the message processing exceeded the value specified the message is logged informatory","-1"],["getInputFromSessionKey","when set, input is taken from this session key, instead of regular input",""],["storeResultInSessionKey","when set, the result is stored under this session key",""],["checkXmlWellFormed","when set true, the XML well-formedness of the result is checked","false"],["checkRootTag","when set, besides the XML well-formedness the root element of the result is checked to be equal to the value set",""],["preserveInput","when set true, the input of a pipe is restored before processing the next one","false"],["namespaceAware","controls namespaceAwareness for parameters","application default"],["forwardName","name of forward returned upon completion","\"success\""],["resultOnTimeOut","result returned when no return-message was received within the timeout limit (e.g. \"receiver timed out\").",""],["linkMethod","Indicates wether the server uses the correlationID or the messageID in the correlationID field of the reply. This requirers the sender to have set the correlationID at the time of sending.","CORRELATIONID"],["auditTrailXPath","xpath expression to extract audit trail from message",""],["auditTrailNamespaceDefs","namespace defintions for auditTrailXPath. Must be in the form of a comma or space separated list of prefix=namespaceuri-definitions",""],["auditTrailSessionKey","Key of a PipeLineSession-variable. If specified, the value of the PipeLineSession variable is used as audit trail (instead of the default \"no audit trail\")",""],["correlationIDXPath","xpath expression to extract correlationID from message",""],["correlationIDNamespaceDefs","namespace defintions for correlationIDXPath. Must be in the form of a comma or space separated list of prefix=namespaceuri-definitions",""],["correlationIDStyleSheet","stylesheet to extract correlationID from message",""],["correlationIDSessionKey","Key of a PipeLineSession-variable. Is specified, the value of the PipeLineSession variable is used as input for the XpathExpression or StyleSheet, instead of the current input message",""],["hideRegex","Next to common usage in AbstractPipe, also strings in the error/logstore are masked",""],["hideMethod","(only used when hideRegex is not empty and only applies to error/logstore) either all or firstHalf. When firstHalf only the first half of the string is masked, otherwise (all) the entire string is masked","\"all\""],["labelXPath","xpath expression to extract label from message",""],["labelNamespaceDefs","namespace defintions for labelXPath. Must be in the form of a comma or space separated list of prefix=namespaceuri-definitions",""],["labelStyleSheet","stylesheet to extract label from message",""],["timeOutOnResult","when not empty, a TimeOutException is thrown when the result equals this value (for testing purposes only)",""],["exceptionOnResult","when not empty, a PipeRunException is thrown when the result equals this value (for testing purposes only)",""],["maxRetries","the number of times a processing attempt is retried after a timeout or an exception is caught or after a incorrect reply is received (see also retryXPath)","0"],["retryMinInterval","The starting number of seconds waited after an unsuccessful processing attempt before another processing attempt is made. Each next retry this interval is doubled with a upper limit of retryMaxInterval","1"],["retryMaxInterval","The maximum number of seconds waited after an unsuccessful processing attempt before another processing attempt is made","600"],["retryXPath","xpath expression evaluated on each technical successful reply. Retry is done if condition returns true",""],["retryNamespaceDefs","namespace defintions for retryXPath. Must be in the form of a comma or space separated list of prefix=namespaceuri-definitions",""],["useInputForExtract","when set true, the input of a pipe is used to extract audit trail, correlationID and label (instead of the wrapped input)","true"],["streamResultToServlet","if set, the result is first base64 decoded and then streamed to the HttpServletResponse object","false"],["presumedTimeOutInterval","when the previous call was a timeout, the maximum time (in seconds) after this timeout to presume the current call is also a timeout. A value of -1 indicates to never presume timeouts","10 s"],["senderDOT*","any attribute of the sender instantiated by descendant classes",""]],"children":[],"description":"Sends a message using a sender and optionally receives a reply from the same sender, or \n from a listenerDOT\n\n "},"MoveFilePipe":{"_id":"5a3c1d79670a9fad1820b068","__v":0,"type":"pipes","classname":"MoveFilePipe","url":"","free":"true","attrs":{"classname":["nl.nn.ibis4fundation.FtpSender"],"name":[""],"directory":[""],"filename":[""],"wildcard":[""],"wildcardSessionKey":[""],"move2dir":[""],"move2file":[""],"move2fileSessionKey":[""],"numberOfBackups":["5"],"overwrite":["false"],"numberOfAttempts":["10"],"waitBeforeRetry":["1000 [ms]"],"append":["false"],"deleteEmptyDirectory":["false"],"createDirectory":["false"],"prefix":[""],"suffix":[""],"throwException":["false"]},"properties":[["classname","nl.nn.ibis4fundation.FtpSender","nl.nn.ibis4fundation.FtpSender"],["name","name of the sender",""],["directory","base directory where files are moved from",""],["filename","name of the file to move (if not specified, the input for this pipe is assumed to be the name of the file",""],["wildcard","filter of files to replace",""],["wildcardSessionKey","session key that contains the name of the filter to use (only used if wildcard is not set)",""],["move2dir","destination directory",""],["move2file","name of the destination file (if not specified, the name of the file to move is taken)",""],["move2fileSessionKey","session key that contains the name of the file to use (only used if move2file is not set)",""],["numberOfBackups","number of copies held of a file with the same name. Backup files have a dot and a number suffixed to their name. If set to 0, no backups will be kept.","5"],["overwrite","when set true, the destination file will be deleted if it already exists. When set false and numberOfBackups set to 0, a counter is added to the destination filename ('basename_###.ext')","false"],["numberOfAttempts","maximum number of attempts before throwing an exception","10"],["waitBeforeRetry","time between attempts","1000 [ms]"],["append"," when set true and the destination file already exists, the content of the file to move is written to the end of the destination file. This implies overwrite=false","false"],["deleteEmptyDirectory","when set to true, the directory from which a file is moved is deleted when it contains no other files","false"],["createDirectory","when set to true, the directory to move to is created if it does not exist","false"],["prefix","string which is inserted at the start of the destination file",""],["suffix","string which is inserted at the end of the destination file (and replaces the extension if present)",""],["throwException","when true, numberOfBackups is set to 0 and the destination file already exists a PipeRunException is thrown (instead of adding a counter to the destination filename)","false"]],"children":[],"description":"Pipe for moving files to another directory.\n\n "},"PasswordGeneratorPipe":{"_id":"5a3c1d79670a9fad1820b069","__v":0,"type":"pipes","classname":"PasswordGeneratorPipe","url":"","free":"true","attrs":{"name":[""],"maxThreads":["0 (unlimited)"],"forwardName":["\"success\""],"LCharacters":["('a'..'z')"],"UCharacters":["('A'..'Z')"],"numbers":["('0'..'9')"],"signs":["(;:_%$#@!&gt;&lt;)"],"useSecureRandom":["true"],"numOfLCharacters":["2"],"numOfUCharacters":["2"],"numOfDigits":["2"],"numOfSigns":["2"]},"properties":[["name","name of the Pipe",""],["maxThreads","maximum number of threads that may call doPipe(java.lang.Object, nl.nn.adapterframework.core.IPipeLineSession) simultaneously","0 (unlimited)"],["forwardName","name of forward returned upon completion","\"success\""],["LCharacters","The lowercase characters to use","('a'..'z')"],["UCharacters","The uppercase characters to use","('A'..'Z')"],["numbers","The numbers to use","('0'..'9')"],["signs","The signs to use","(;:_%$#@!&gt;&lt;)"],["useSecureRandom","Whether the SecureRandom algorithm is to be used (slower)","true"],["numOfLCharacters","The number of lowercase characters in the generated password","2"],["numOfUCharacters","The number of uppercase characters in the generated password","2"],["numOfDigits","The number of digits in the generated password","2"],["numOfSigns","The number of sign characters in the generated password","2"]],"children":[],"description":"Returns random password.\n\n "},"PasswordHashPipe":{"_id":"5a3c1d79670a9fad1820b06a","__v":0,"type":"pipes","classname":"PasswordHashPipe","url":"","free":"true","attrs":{"name":[""],"hashSessionKey":[""],"classname":["nl.nn.adapterframework.pipes.PasswordHashPipe"]},"properties":[["className","nl.nn.adapterframework.pipes.PasswordHashPipe","nl.nn.adapterframework.pipes.PasswordHashPipe"],["name","name of the Pipe",""],["hashSessionKey","name of sessionKey that holds the hash which will be used to validate the password (input of the pipe)",""]],"children":[],"description":"Hash a password or validate a password against a hash using PasswordHash.java\n from https://crackstation.net/hashing-security.htm.\n Input of the pipe is expected to be the password. In case hashSessionKey\n isn't used a hash of the password is returned. In case hashSessionKey is used\n it is validated against the hash in the session key which will determine\n the forward to be used (success or failure).\n  \n "},"PostboxRetrieverPipe":{"_id":"5a3c1d79670a9fad1820b06b","__v":0,"type":"pipes","classname":"PostboxRetrieverPipe","url":"","free":"true","attrs":{"name":[""],"maxThreads":["0 (unlimited)"],"resultOnEmptyPostbox":["empty postbox"],"forwardName":["\"success\""],"parameterList":[""],"listenerDOT*":[""]},"properties":[["name","name of the Pipe",""],["maxThreads","maximum number of threads that may call doPipe(java.lang.Object, nl.nn.adapterframework.core.IPipeLineSession) simultaneously","0 (unlimited)"],["resultOnEmptyPostbox","result when no object is on postbox","empty postbox"],["forwardName","name of forward returned upon completion","\"success\""],["parameterList","Parameters of the Pipe",""],["listenerDOT*","any attribute of the listener instantiated by descendant classes",""]],"children":[],"description":"Retrieves a message using an IPostboxlistenerDOT \n \n Note that most listeners allow you to specify a timeout. The timeout has the following\n meaning:\n  \n &lt;0 = no wait\n 0 = block until message available\n &gt;= 0 maximum wait in milliseconds\n  \n\n "},"PostboxSenderPipe":{"_id":"5a3c1d79670a9fad1820b06c","__v":0,"type":"pipes","classname":"PostboxSenderPipe","url":"","free":"true","attrs":{"name":[""],"maxThreads":["0 (unlimited)"],"forwardName":["\"success\""],"parameterList":[""],"senderDOT*":[""]},"properties":[["name","name of the Pipe",""],["maxThreads","maximum number of threads that may call MessageSendingPipe.doPipe(java.lang.Object, nl.nn.adapterframework.core.IPipeLineSession) simultaneously","0 (unlimited)"],["forwardName","name of forward returned upon completion","\"success\""],["parameterList","Parameters of the Pipe",""],["senderDOT*","any attribute of the sender instantiated by descendant classes",""]],"children":[],"description":"Deprecated.&nbsp;\nplease use plain GenericMessageSendingPipe, that has same functionality (since 4.2d)\n\n\npublic class PostboxSenderPipe\nextends GenericMessageSendingPipe\nSends a message using a sender and optionally receives a reply from the same sender, or from a listenerDOT\n\n "},"PutInSession":{"_id":"5a3c1d79670a9fad1820b06d","__v":0,"type":"pipes","classname":"PutInSession","url":"","free":"true","attrs":{"forwardName":["\"success\""],"sessionKey":[""],"value":[""]},"properties":[["forwardName","name of forward returned upon completion","\"success\""],["sessionKey","name of the key in the PipeLineSession to store the input in",""],["value","The value to store the in the PipeLineSession. If not set, the input of the pipe is stored",""]],"children":[],"description":"Puts the input in the PipeLineSession, under the key specified by\n sessionKey.\n\n "},"PutSystemDateInSession":{"_id":"5a3c1d79670a9fad1820b06f","__v":0,"type":"pipes","classname":"PutSystemDateInSession","url":"","free":"true","attrs":{"name":[""],"sessionKey":["systemDate"],"dateFormat":["fullIsoFormat: yyyy-MM-dd'T'hh:mm:sszzz"],"timeZone":["the default time zone for the JVM"],"returnFixedDate":["false"],"maxThreads":["0 (unlimited)"],"forwardName":["\"success\""]},"properties":[["name","name of the Pipe",""],["sessionKey","key of session variable to store result in","systemDate"],["dateFormat","format to store date in","fullIsoFormat: yyyy-MM-dd'T'hh:mm:sszzz"],["timeZone","the time zone to use for the formatter","the default time zone for the JVM"],["returnFixedDate","If true, the date/time returned will always be December 17, 2001, 09:30:47 (for testing purposes only). It is overridden by the value of the pipeLineSession key stub4testtool.fixeddate when it exists","false"],["maxThreads","maximum number of threads that may call doPipe(java.lang.Object, nl.nn.adapterframework.core.IPipeLineSession) simultaneously","0 (unlimited)"],["forwardName","name of forward returned upon completion","\"success\""]],"children":[],"description":"Puts the system date/time under a key in the pipeLineSession.\n\n "},"RemoveFromSession":{"_id":"5a3c1d79670a9fad1820b070","__v":0,"type":"pipes","classname":"RemoveFromSession","url":"","free":"true","attrs":{"name":[""],"maxThreads":["0 (unlimited)"],"forwardName":["\"success\""],"sessionKey":[""],"preserveInput":["true"]},"properties":[["name","name of the Pipe",""],["maxThreads","maximum number of threads that may call doPipe(java.lang.Object, nl.nn.adapterframework.core.IPipeLineSession) simultaneously","0 (unlimited)"],["forwardName","name of forward returned upon completion","\"success\""],["sessionKey","name of the key in the PipeLineSession to remove. If this key is empty the input message is interpretted as key. For multiple keys use ',' as delimiter",""],["preserveInput","when set true, the result of this pipe will be the same as the input. Otherwise the content of the removed key is returned (and '[null]' when the key is not found)","true"]],"children":[],"description":"Removes a key specified by sessionKey\n from the pipeLineSession.\n\n "},"ReplacerPipe":{"_id":"5a3c1d79670a9fad1820b071","__v":0,"type":"pipes","classname":"ReplacerPipe","url":"","free":"true","attrs":{"name":[""],"find":[""],"replace":[""],"lineSeparatorSymbol":[""],"replaceNonXmlChars":["true"],"replaceNonXmlChar":["0x00BF (inverted question mark)"],"maxThreads":["0 (unlimited)"],"forwardName":["\"success\""]},"properties":[["name","name of the Pipe",""],["find","string to search for",""],["replace","string that will replace each of the strings found",""],["lineSeparatorSymbol","Sets the string the representation in find and replace of the line separator",""],["replaceNonXmlChars","Replace all non XML chars (not in the character range as specified by the XML specification) with replaceNonXmlChar","true"],["replaceNonXmlChar","character that will replace each non valid XML character (empty character is also possible)","0x00BF (inverted question mark)"],["maxThreads","maximum number of threads that may call doPipe(java.lang.Object, nl.nn.adapterframework.core.IPipeLineSession) simultaneously","0 (unlimited)"],["forwardName","name of forward returned upon completion","\"success\""]],"children":[],"description":"Replaces all occurrences of one string with another.\n \n "},"RhinoPipe":{"_id":"5a3c1d79670a9fad1820b072","__v":0,"type":"pipes","classname":"RhinoPipe","url":"","free":"true","attrs":{"debug":["true"],"name":[""],"maxThreads":["0 (unlimited)"],"forwardName":["\"success\""],"fileName":[""],"jsfunctionName":[""],"jsfunctionArguments":[""],"any":["Any parameters defined on the pipe will be Concatenated into one string and added to input"],"classname":["nl.nn.adapterframework.pipes.RhinoPipe"]},"properties":[["className","nl.nn.adapterframework.pipes.RhinoPipe","nl.nn.adapterframework.pipes.RhinoPipe"],["debug","when set true or set to something else then \"true\", (even set to the empty string), the debugging is not active","true"],["name","name of the Pipe",""],["maxThreads","maximum number of threads that may call doPipe(java.lang.Object, nl.nn.adapterframework.core.IPipeLineSession) simultaneously","0 (unlimited)"],["forwardName","name of forward returned upon completion","\"success\""],["fileName","name of the file containing the Java-script Functions as base input",""],["jsfunctionName","The name of the function in the java-script library to run",""],["jsfunctionArguments","The arguments to run the function in the java-script library to run",""],["any","any","Any parameters defined on the pipe will be Concatenated into one string and added to input"]],"children":[],"description":"Rhino JavaScript Runtime Factory Pipe.\n \n This pipe takes all input and pushes it into javascript runtime.\n The invoke method is called to initialize the runtime\n Afterward the results are evaluated.\n "},"SkipPipe":{"_id":"5a3c1d79670a9fad1820b074","__v":0,"type":"pipes","classname":"SkipPipe","url":"","free":"true","attrs":{"skip":["0"],"length":["-1"]},"properties":[["skip","number of bytes (for byte array input) or characters (for String input) to skip. An empty byte array or String is returned when skip is larger then the length of the input","0"],["length","if length&gt;=0 only these number of bytes (for byte array input) or characters (for String input) is returned.","-1"]],"children":[],"description":"Skip a number of bytes or characters from the input. \n \n "},"StreamLineIteratorPipe":{"_id":"5a3c1d79670a9fad1820b075","__v":0,"type":"pipes","classname":"StreamLineIteratorPipe","url":"","free":"true","attrs":{"closeInputstreamOnExit":["true"],"endOfLineString":[""],"classname":["nl.nn.adapterframework.pipes.StreamLineIteratorPipe"]},"properties":[["className","nl.nn.adapterframework.pipes.StreamLineIteratorPipe","nl.nn.adapterframework.pipes.StreamLineIteratorPipe"],["closeInputstreamOnExit","when set to false, the inputstream is not closed after it has been used","true"],["endOfLineString","when set, each line has to end with this string. If the line doesn't end with this string next lines are added (including line separators) until the total line ends with the given string",""]],"children":[],"description":"Sends a message to a Sender for each line of its input, that must be an InputStream.\n \n "},"StreamPipe":{"_id":"5a3c1d79670a9fad1820b076","__v":0,"type":"pipes","classname":"StreamPipe","url":"","free":"true","attrs":{"name":[""],"forwardName":["\"success\""],"extractFirstStringPart":["false"],"multipartXmlSessionKey":["multipartXml"],"checkAntiVirus":["false"],"antiVirusPartName":["antivirus_rc"],"antiVirusPassedMessage":["Pass"],"antiVirusFailureAsSoapFault":["false"]},"properties":[["name","name of the Pipe",""],["forwardName","name of forward returned upon completion","\"success\""],["extractFirstStringPart","(only used for parameter httpRequest) when true the first part is not put in a session key but returned to the pipeline (as the result of this pipe)","false"],["multipartXmlSessionKey","(only used when extractFirstStringPart=true) the session key to put the xml in with info about the stored parts","multipartXml"],["checkAntiVirus","(only used for parameter httpRequest) when true parts are checked for antivirus scan returncode. These antivirus scan parts have been added by another application (so the antivirus scan is NOT performed in this pipe). For each file part an antivirus scan part have been added by this other application (directly after this file part)","false"],["antiVirusPartName","(only used for parameter httpRequest and when checkAntiVirus=true) name of antivirus scan parts","antivirus_rc"],["antiVirusPassedMessage","(only used for parameter httpRequest and when checkAntiVirus=true) message of antivirus scan parts which indicates the antivirus scan passed","Pass"],["antiVirusFailureAsSoapFault","(only used for parameter httpRequest and when checkAntiVirus=true) when true and the antiVirusFailed forward is specified and the antivirus scan did not pass, a SOAP Fault is returned instead of only a plain error message","false"]],"children":[],"description":"Stream an input stream to an output stream.\n\n "},"Text2XmlPipe":{"_id":"5a3c1d79670a9fad1820b077","__v":0,"type":"pipes","classname":"Text2XmlPipe","url":"","free":"true","attrs":{"xmlTag":[""],"includeXmlDeclaration":["true"],"splitLines":["false"],"replaceNonXmlChars":["true"],"useCdataSection":["true"]},"properties":[["xmlTag","the xml tag to encapsulate the text in",""],["includeXmlDeclaration","controls whether a declation is included above the Xml text","true"],["splitLines","controls whether the lines of the input are places in separated &lt;line&gt; tags","false"],["replaceNonXmlChars","Replace all non XML chars (not in the character range as specified by the XML specification) with the inverted question mark (0x00BF)","true"],["useCdataSection","controls whether the text to encapsulate should be put in a CDATA section","true"]],"children":[],"description":"Pipe for converting text to or from xml. \n \n "},"TimeoutGuardPipe":{"_id":"5a3c1d79670a9fad1820b078","__v":0,"type":"pipes","classname":"TimeoutGuardPipe","url":"","free":"true","attrs":{"name":[""],"throwException":["true"],"timeout":["When a parameter with name timeout is present, it is used instead of the timeout specified by the attribute"]},"properties":[["name","name of the Pipe",""],["throwException","when true, a PipeRunException is thrown. Otherwise the output is only logged as an error (and returned in a XML string with 'error' tags)","true"],["timeout","timeout in seconds of obtaining a result","30"],["timeout","int","When a parameter with name timeout is present, it is used instead of the timeout specified by the attribute"]],"children":[],"description":"Extension to FixedForwardPipe for interrupting processing when timeout is exceeded.\n \n "},"UnzipPipe":{"_id":"5a3c1d79670a9fad1820b079","__v":0,"type":"pipes","classname":"UnzipPipe","url":"","free":"true","attrs":{"name":[""],"maxThreads":["0 (unlimited)"],"forwardName":["\"success\""],"directory":[""],"directorySessionKey":[""],"deleteOnExit":["true"],"collectResults":["true"],"keepOriginalFileName":["false"],"createSubdirectories":["false"],"classname":["nl.nn.adapterframework.pipes.FixedResult"]},"properties":[["className","nl.nn.adapterframework.pipes.FixedResult","nl.nn.adapterframework.pipes.FixedResult"],["name","name of the Pipe",""],["maxThreads","maximum number of threads that may call doPipe(java.lang.Object, nl.nn.adapterframework.core.IPipeLineSession) simultaneously","0 (unlimited)"],["forwardName","name of forward returned upon completion","\"success\""],["directory","directory to extract the archive to",""],["directorySessionKey","SessionKey with a directory value to extract the archive to",""],["deleteOnExit","when true, file is automatically deleted upon normal JVM termination","true"],["collectResults","if set false, only a small summary is returned","true"],["keepOriginalFileName","if set false, a suffix is added to the original filename to be sure it is unique","false"],["createSubdirectories","if set true, subdirectories in the zip file are supported","false"]],"children":[],"description":"Assumes input to be a ZIP archive, and unzips it to a directory.\n\n \n The output of each unzipped item is returned in XML as follows:\n \n  &lt;results count=\"num_of_items\"&gt;\n    &lt;result item=\"1\"&gt;\n      &lt;zipEntry&gt;name in ZIP archive of first item&lt;/zipEntry&gt;\n      &lt;fileName&gt;filename of first item&lt;/fileName&gt;\n    &lt;/result&gt;\n    &lt;result item=\"2\"&gt;\n      &lt;zipEntry&gt;name in ZIP archive of second item&lt;/zipEntry&gt;\n      &lt;fileName&gt;filename of second item&lt;/fileName&gt;\n    &lt;/result&gt;\n       ...\n  &lt;/results&gt;\n \n \n "},"UploadFilePipe":{"_id":"5a3c1d79670a9fad1820b07a","__v":0,"type":"pipes","classname":"UploadFilePipe","url":"","free":"true","attrs":{"name":[""],"sessionKey":["file"],"directory":[""],"directorySessionKey":["destination"]},"properties":[["name","name of the Pipe",""],["sessionKey","name of the key in the PipeLineSession which contains the inputstream","file"],["directory","base directory where files are unzipped to",""],["directorySessionKey","the session key that contains the base directory where files are unzipped to","destination"]],"children":[],"description":"Uploads a zip file (inputstream in a sessionKey) and unzips it to a directory.\n\n "},"WsdlGeneratorPipe":{"_id":"5a3c1d79670a9fad1820b07c","__v":0,"type":"pipes","classname":"WsdlGeneratorPipe","url":"","free":"true","attrs":{"name":[""],"from":["parent"],"classname":["nl.nn.adapterframework.pipes.WsdlGeneratorPipe"]},"properties":[["className","nl.nn.adapterframework.pipes.WsdlGeneratorPipe","nl.nn.adapterframework.pipes.WsdlGeneratorPipe"],["name","name of the Pipe",""],["from","either parent (adapter of pipeline which contains this pipe) or input (name of adapter specified by input of pipe)","parent"]],"children":[],"description":"Generate WSDL of parent or specified adapter.\n\n "},"WsdlXmlValidator":{"_id":"5a3c1d79670a9fad1820b07d","__v":0,"type":"pipes","classname":"WsdlXmlValidator","url":"","free":"true","attrs":{"*":[""],"wsdl":[""],"schemaLocation":[""],"schemaLocationToAdd":[""],"soapBodyNamespace":[""]},"properties":[["*","all attributes available on SoapValidator can be used",""],["wsdl","the WSDL to read the XSD's from",""],["schemaLocation","see schemaLocation attribute on XmlValidator except that the schema locations are referring to schema's in the WSDL, schema1 refers to the first, schema2 refers to the second and so on. If not set, all schema's are derived from the WSDL",""],["schemaLocationToAdd","Pairs of URI references which will be added to the WSDL",""],["soapBodyNamespace","creates schemaLocation attribute based on the WSDL and replaces the namespace of the SOAP Body element",""]],"children":[],"description":"XmlValidator that will read the XSD's to use from a WSDL. As it extends the\n SoapValidator is will also add the SOAP envelope XSD.\n \n "},"XmlFileElementIteratorPipe":{"_id":"5a3c1d79670a9fad1820b07f","__v":0,"type":"pipes","classname":"XmlFileElementIteratorPipe","url":"","free":"true","attrs":{"elementName":[""],"elementChain":[""]},"properties":[["elementName","the name of the element to iterate over (alternatively: elementChain)",""],["elementChain","the name of the element to iterate over, preceded with all ancestor elements and separated by semicolons (e.g. \"adapter;pipeline;pipe\")",""]],"children":[],"description":"Sends a message to a Sender for each element in the XML file that the input message refers to.\n\n "},"XmlIf":{"_id":"5a3c1d79670a9fad1820b080","__v":0,"type":"pipes","classname":"XmlIf","url":"","free":"true","attrs":{"name":[""],"maxThreads":["0 (unlimited)"],"durationThreshold":["-1"],"getInputFromSessionKey":[""],"storeResultInSessionKey":[""],"namespaceAware":["application default"],"sessionKey":[""],"xpathExpression":[""],"expressionValue":[""],"elseForwardName":["else"],"classname":["nl.nn.adapterframework.pipes.XmlIf"]},"properties":[["className","nl.nn.adapterframework.pipes.XmlIf","nl.nn.adapterframework.pipes.XmlIf"],["name","name of the Pipe",""],["maxThreads","maximum number of threads that may call doPipe(java.lang.Object, nl.nn.adapterframework.core.IPipeLineSession) simultaneously","0 (unlimited)"],["durationThreshold","if durationThreshold &gt;=0 and the duration (in milliseconds) of the message processing exceeded the value specified the message is logged informatory","-1"],["getInputFromSessionKey","when set, input is taken from this session key, instead of regular input",""],["storeResultInSessionKey","when set, the result is stored under this session key",""],["namespaceAware","controls namespace-awareness of transformation","application default"],["sessionKey","name of the key in the PipeLineSession to retrieve the input-message from. If not set, the current input message of the Pipe is taken. N.B. same as getInputFromSessionKey",""],["xpathExpression","XPath expression to be applied to the input-message. If not set, no transformation is done",""],["expressionValue","a string to compare the result of the xpathExpression (or the input-message itself) to. If not specified, a non-empty result leads to the 'then'-forward, an empty result to 'else'-forward",""],["elseForwardName","forward returned when 'false'","else"]],"children":[],"description":"Selects an exitState, based on the content of a sessionkey.\n \n "},"XmlSwitch":{"_id":"5a3c1d79670a9fad1820b082","__v":0,"type":"pipes","classname":"XmlSwitch","url":"","free":"true","attrs":{"name":[""],"maxThreads":["0 (unlimited)"],"durationThreshold":["-1"],"getInputFromSessionKey":[""],"storeResultInSessionKey":[""],"namespaceAware":["application default"],"serviceSelectionStylesheetFilename":["a stylesheet that returns the name of the root-element"],"xpathExpression":[""],"namespaceDefs":[""],"sessionKey":[""],"emptyForwardName":[""],"notFoundForwardName":[""],"xslt2":["false"],"classname":["nl.nn.adapterframework.pipes.XmlSwitch"]},"properties":[["className","nl.nn.adapterframework.pipes.XmlSwitch","nl.nn.adapterframework.pipes.XmlSwitch"],["name","name of the Pipe",""],["maxThreads","maximum number of threads that may call doPipe(java.lang.Object, nl.nn.adapterframework.core.IPipeLineSession) simultaneously","0 (unlimited)"],["durationThreshold","if durationThreshold &gt;=0 and the duration (in milliseconds) of the message processing exceeded the value specified the message is logged informatory","-1"],["getInputFromSessionKey","when set, input is taken from this session key, instead of regular input",""],["storeResultInSessionKey","when set, the result is stored under this session key",""],["namespaceAware","controls namespace-awareness of transformation","application default"],["serviceSelectionStylesheetFilename","stylesheet may return a String representing the forward to look up","a stylesheet that returns the name of the root-element"],["xpathExpression","XPath-expression that returns a String representing the forward to look up. It's possible to refer to a parameter (which e.g. contains a value from a sessionKey) by using the parameter name prefixed with $",""],["namespaceDefs","namespace defintions for xpathExpression. Must be in the form of a comma or space separated list of prefix=namespaceuri-definitions",""],["sessionKey","name of the key in the PipeLineSession to retrieve the input message from. (N.B. same as getInputFromSessionKey)",""],["emptyForwardName","Forward returned when the content, on which the switch is performed, is empty. If emptyForwardName is not specified, notFoundForwardName is used.",""],["notFoundForwardName","Forward returned when the pipename derived from the stylesheet could not be found.",""],["xslt2","when set true XSLT processor 2.0 (net.sf.saxon) will be used, otherwise XSLT processor 1.0 (org.apache.xalan)","false"]],"children":[],"description":"Selects an exitState, based on either the content of the input message, by means\n of a XSLT-stylesheet, the content of a session variable or, by default, by returning the name of the root-element.\n \n "},"XmlValidator":{"_id":"5a3c1d79670a9fad1820b083","__v":0,"type":"pipes","classname":"XmlValidator","url":"","free":"true","attrs":{"name":[""],"maxThreads":["0 (unlimited)"],"durationThreshold":["-1"],"getInputFromSessionKey":[""],"storeResultInSessionKey":[""],"schema":[""],"noNamespaceSchemaLocation":[""],"schemaLocation":[""],"schemaSessionKey":[""],"fullSchemaChecking":["false"],"throwException":["false"],"reasonSessionKey":["failureReason"],"xmlReasonSessionKey":["xmlFailureReason"],"root":[""],"validateFile":["false"],"charset":["UTF-8"],"soapNamespace":["http://schemas.xmlsoap.org/soap/envelope/"],"ignoreUnknownNamespaces":["true when schema or noNamespaceSchemaLocation is used, false otherwise"],"warn":["true"],"forwardFailureToSuccess":["false"],"addNamespaceToSchema":["false"],"importedSchemaLocationsToIgnore":[""],"useBaseImportedSchemaLocationsToIgnore":["false"],"importedNamespacesToIgnore":[""],"ignoreCaching":["false"],"lazyInit":["application default (false)"],"classname":["nl.nn.adapterframework.pipes.XmlValidator"]},"properties":[["className","nl.nn.adapterframework.pipes.XmlValidator","nl.nn.adapterframework.pipes.XmlValidator"],["name","name of the Pipe",""],["maxThreads","maximum number of threads that may call doPipe(Object, IPipeLineSession) simultaneously","0 (unlimited)"],["durationThreshold","if durationThreshold &gt;=0 and the duration (in milliseconds) of the message processing exceeded the value specified the message is logged informatory","-1"],["getInputFromSessionKey","when set, input is taken from this session key, instead of regular input",""],["storeResultInSessionKey","when set, the result is stored under this session key",""],["schema","The filename of the schema on the classpath. See doc on the method. (effectively the same as noNamespaceSchemaLocation)",""],["noNamespaceSchemaLocation","A URI reference as a hint as to the location of a schema document with no target namespace. See doc on the method.",""],["schemaLocation","Pairs of URI references (one for the namespace name, and one for a hint as to the location of a schema document defining names for that namespace name). See doc on the method.",""],["schemaSessionKey","",""],["fullSchemaChecking","Perform addional memory intensive checks","false"],["throwException","Should the XmlValidator throw a PipeRunException on a validation error (if not, a forward with name \"failure\" should be defined.","false"],["reasonSessionKey","if set: key of session variable to store reasons of mis-validation in","failureReason"],["xmlReasonSessionKey","like reasonSessionKey but stores reasons in xml format and more extensive","xmlFailureReason"],["root","name of the root element. Or a comma separated list of names to choose from (only one is allowed)",""],["validateFile","when set true, the input is assumed to be the name of the file to be validated. Otherwise the input itself is validated","false"],["charset","characterset used for reading file, only used when validateFile is true","UTF-8"],["soapNamespace","the namespace of the SOAP Envelope, when this property has a value and the input message is a SOAP Message the content of the SOAP Body is used for validation, hence the SOAP Envelope and SOAP Body elements are not considered part of the message to validate. Please note that this functionality is deprecated, using SoapValidator is now the preferred solution in case a SOAP Message needs to be validated, in other cases give this property an empty value","http://schemas.xmlsoap.org/soap/envelope/"],["ignoreUnknownNamespaces","ignore namespaces in the input message which are unknown","true when schema or noNamespaceSchemaLocation is used, false otherwise"],["warn","when set true, send warnings to logging and console about syntax problems in the configured schema('s)","true"],["forwardFailureToSuccess","when set true, the failure forward is replaced by the success forward (like a warning mode)","false"],["addNamespaceToSchema","when set true, the namespace from schemaLocation is added to the schema document as targetNamespace","false"],["importedSchemaLocationsToIgnore","comma separated list of schemaLocations which are excluded from an import or include in the schema document",""],["useBaseImportedSchemaLocationsToIgnore","when set true, the comparison for importedSchemaLocationsToIgnore is done on base filename without any path","false"],["importedNamespacesToIgnore","comma separated list of namespaces which are excluded from an import or include in the schema document",""],["ignoreCaching","when set true, the number for caching validators in AppConstants is ignored and NO caching is done (for this validator only)","false"],["lazyInit","when set, the value in AppConstants is overwritten (for this validator only)","application default (false)"]],"children":[],"description":"Pipe that validates the input message against a XML-Schema.\n\n "},"XmlWellFormedChecker":{"_id":"5a3c1d79670a9fad1820b084","__v":0,"type":"pipes","classname":"XmlWellFormedChecker","url":"","free":"true","attrs":{"root":[""]},"properties":[["root","name of the root element",""]],"children":[],"description":"Pipe that checks the well-formedness of the input message.\n If root is given then this is also checked.\n \n "},"XPathPipe":{"_id":"5a3c1d79670a9fad1820b085","__v":0,"type":"pipes","classname":"XPathPipe","url":"","free":"true","attrs":{"xpathExpression":[""]},"properties":[["xpathExpression","Expression to evaluate",""]],"children":[],"description":"Deprecated.&nbsp;\nPlease use XsltPipe, that has the same functionality\n\n\npublic class XPathPipe\nextends XsltPipe\n"},"XQueryPipe":{"_id":"5a3c1d79670a9fad1820b086","__v":0,"type":"pipes","classname":"XQueryPipe","url":"","free":"true","attrs":{"name":[""],"xqueryName":[""],"xqueryFile":[""],"classname":["nl.nn.adapterframework.pipes.XsltPipe"]},"properties":[["className","nl.nn.adapterframework.pipes.XsltPipe","nl.nn.adapterframework.pipes.XsltPipe"],["name","name of the Pipe",""],["xqueryName","name of the file (resource) on the classpath to read the xquery from",""],["xqueryFile","name of the file on the file system to read the xquery from",""]],"children":[],"description":"Perform an XQuery.\n\n "},"XsltPipe":{"_id":"5a3c1d79670a9fad1820b088","__v":0,"type":"pipes","classname":"XsltPipe","url":"","free":"true","attrs":{"name":[""],"maxThreads":["0 (unlimited)"],"durationThreshold":["-1"],"getInputFromSessionKey":[""],"storeResultInSessionKey":[""],"namespaceAware":["application default"],"styleSheetName":[""],"xpathExpression":[""],"namespaceDefs":[""],"outputType":["text"],"omitXmlDeclaration":["true"],"skipEmptyTags":["false"],"indentXml":["true"],"removeNamespaces":["false"],"xslt2":["false"],"classname":["nl.nn.adapterframework.pipes.XsltPipe"]},"properties":[["className","nl.nn.adapterframework.pipes.XsltPipe","nl.nn.adapterframework.pipes.XsltPipe"],["name","name of the Pipe",""],["maxThreads","maximum number of threads that may call doPipe(java.lang.Object, nl.nn.adapterframework.core.IPipeLineSession) simultaneously","0 (unlimited)"],["durationThreshold","if durationThreshold &gt;=0 and the duration (in milliseconds) of the message processing exceeded the value specified the message is logged informatory","-1"],["getInputFromSessionKey","when set, input is taken from this session key, instead of regular input",""],["storeResultInSessionKey","when set, the result is stored under this session key",""],["namespaceAware","controls namespace-awareness of transformation","application default"],["styleSheetName","stylesheet to apply to the input message",""],["xpathExpression","XPath-expression to apply to the input message. It's possible to refer to a parameter (which e.g. contains a value from a sessionKey) by using the parameter name prefixed with $",""],["namespaceDefs","namespace defintions for xpathExpression. Must be in the form of a comma or space separated list of prefix=namespaceuri-definitions",""],["outputType","either 'text' or 'xml'. Only valid for xpathExpression","text"],["omitXmlDeclaration","force the transformer generated from the XPath-expression to omit the xml declaration","true"],["skipEmptyTags","when set true empty tags in the output are removed","false"],["indentXml","when set true, result is pretty-printed. (only used when skipEmptyTags=\"true\")","true"],["removeNamespaces","when set true namespaces (and prefixes) in the input message are removed","false"],["xslt2","when set true XSLT processor 2.0 (net.sf.saxon) will be used, otherwise XSLT processor 1.0 (org.apache.xalan)","false"]],"children":[],"description":"Perform an XSLT transformation with a specified stylesheet.\n\n "},"DirectoryListener":{"_id":"5a3c1d79670a9fad1820b089","__v":0,"type":"receivers","classname":"DirectoryListener","url":"","free":"true","attrs":{"name":[""],"inputDirectory":[""],"wildcard":[""],"excludeWildcard":[""],"fileTimeSensitive":["false"],"fileList":[""],"fileListForcedAfter":[""],"outputDirectory":[""],"outputFilenamePattern":[""],"processedDirectory":[""],"numberOfBackups":["5"],"overwrite":["false"],"delete":["false"],"minStableTime":["1000 [ms]"],"passWithoutDirectory":["false"],"createInputDirectory":["false"],"responseTime":["10000 [ms]"],"numberOfAttempts":["1"],"waitBeforeRetry":["1000 [ms]"],"random":["false"],"classname":["nl.nn.adapterframework.batch.DirectoryListener"]},"properties":[["className","nl.nn.adapterframework.batch.DirectoryListener","nl.nn.adapterframework.batch.DirectoryListener"],["name","name of the listener",""],["inputDirectory","Directory to look for files",""],["wildcard","Filter of files to look for in inputDirectory",""],["excludeWildcard","Filter of files to be excluded when looking in inputDirectory",""],["fileTimeSensitive","when true, the file modification time is used in addition to the filename to determine if a file has been seen before","false"],["fileList","When set a list of files in xml format (&lt;files&gt;&lt;file&gt;/file/name&lt;/file&gt;&lt;file&gt;/another/file/name&lt;/file&gt;&lt;/files&gt;) is passed to the pipleline instead of 1 file name when the specified amount of files is present in the input directory. When set to -1 the list of files is passed to the pipleline whenever one of more files are present.",""],["fileListForcedAfter","When set along with fileList a list of files is passed to the pipleline when the specified amount of ms has passed since the first file for a new list of files was found even if the amount of files specified by fileList isn't present in the input directory yet",""],["outputDirectory","Directory where files are stored while being processed",""],["outputFilenamePattern","Pattern for the name using the MessageFormat.format method. Params: 0=inputfilename, 1=inputfile extension, 2=unique uuid, 3=current date",""],["processedDirectory","Directory where files are stored after being processed",""],["numberOfBackups","number of copies held of a file with the same name. Backup files have a dot and a number suffixed to their name. If set to 0, no backups will be kept.","5"],["overwrite","when set true, the destination file will be deleted if it already exists","false"],["delete","when set true, the file processed will deleted after being processed, and not stored","false"],["minStableTime","minimal age of file in milliseconds, to avoid receiving a file while it is still being written","1000 [ms]"],["passWithoutDirectory","pass the filename without the outputDirectory to the pipeline","false"],["createInputDirectory","when set to true, the directory to look for files is created if it does not exist","false"],["responseTime","Waittime to wait between polling. N.B. not used anymore. Please use pollInterval on the Receiver instead","10000 [ms]"],["numberOfAttempts","maximum number of move attempts before throwing an exception. N.B. not used anymore. Please use maxRetries on the Receiver instead","1"],["waitBeforeRetry","time waited after unsuccesful try. N.B. not used anymore.","1000 [ms]"],["random","when set to true, every file in the directory is passed in a random order","false"]],"children":[],"description":"File listener that looks in a directory for files \n according to a wildcard and a excludeWildcard.  \n When a file is found, it is moved to an outputdirectory, so that it isn't found more then once.  \n The name of the moved file is passed to the pipeline.  \n\n "},"FileRecordListener":{"_id":"5a3c1d79670a9fad1820b08a","__v":0,"type":"receivers","classname":"FileRecordListener","url":"","free":"true","attrs":{"name":[""],"inputDirectory":[""],"wildcard":[""],"responseTime":["1000 [ms]"],"directoryProcessedFiles":[""],"storeFileNameInSessionKey":[""],"classname":["nl.nn.adapterframework.receivers.FileRecordListener"]},"properties":[["className","nl.nn.adapterframework.receivers.FileRecordListener","nl.nn.adapterframework.receivers.FileRecordListener"],["name","name of the listener as known to the adapter.",""],["inputDirectory","set the directory name to look in for files.",""],["wildcard","the wildcard to look for files in the specified directory, e.g. \"*.inp\"",""],["responseTime","set the time to delay when no records are to be processed and this class has to look for the arrival of a new file","1000 [ms]"],["directoryProcessedFiles","the directory to store processed files in",""],["storeFileNameInSessionKey","when set, the name of the read file is stored under this session key",""]],"children":[],"description":"File listener that looks in a directory for files according to a wildcard. When a file is\n found, it is read in a String object and parsed to records. \n After reading the file, the file is renamed and moved to a directory.\n \n "},"GenericReceiver":{"_id":"5a3c1d79670a9fad1820b08b","__v":0,"type":"receivers","classname":"GenericReceiver","url":"","free":"true","properties":[],"children":[],"description":"Plain extension of ReceiverBase that can be used directly in configurations.\n Only extension is that the setters for its three worker-objects are public, and can therefore\n be set from the configuration file.\n For configuration options, see ReceiverBase."},"JavaListener":{"_id":"5a3c1d79670a9fad1820b08c","__v":0,"type":"receivers","classname":"JavaListener","url":"","free":"true","attrs":{"name":[""],"synchronous":["true"],"throwException":["true"],"setHttpWsdl(boolean)":["false"],"classname":["nl.nn.adapterframework.receivers.JavaListener"]},"properties":[["className","nl.nn.adapterframework.receivers.JavaListener","nl.nn.adapterframework.receivers.JavaListener"],["name","name of the listener as known to the adapter. An IbisLocalSender refers to this name in its javaListener-attribute.",""],["synchronous"," when set false, the request is executed asynchronously. This implies isolated=true. N.B. Be aware that there is no limit on the number of threads generated","true"],["throwException","Should the JavaListener throw a ListenerException when it occurs or return an error message","true"],["setHttpWsdl(boolean)","when true, the WSDL of the service provided by this listener is available for download ","false"]],"children":[],"description":"The JavaListener listens to java requests.\n\n "},"MessageWrapper":{"_id":"5a3c1d79670a9fad1820b08d","__v":0,"type":"receivers","classname":"MessageWrapper","url":"","free":"true","properties":[],"children":[],"description":"Wrapper for messages that are not serializable."},"PullingListenerContainer":{"_id":"5a3c1d79670a9fad1820b08e","__v":0,"type":"receivers","classname":"PullingListenerContainer","url":"","free":"true","properties":[],"children":[],"description":"Container that provides threads to exectue pulling listeners."},"ReceiverBase":{"_id":"5a3c1d79670a9fad1820b08f","__v":0,"type":"receivers","classname":"ReceiverBase","url":"","free":"true","attrs":{"classname":["name of the class, mostly a class that extends this class"],"name":[""],"active":["true"],"numThreads":["1"],"numThreadsPolling":["1"],"onError":["continue"],"returnedSessionKeys":[""],"transactionTimeout":["0 (use system default)"],"maxDeliveries":["5"],"maxRetries":["1"],"checkForDuplicatesMethod":["MESSAGEID"],"pollInterval":["10"],"correlationIDXPath":[""],"correlationIDNamespaceDefs":[""],"correlationIDStyleSheet":[""],"hideRegex":[""],"hideMethod":["\"all\""],"labelXPath":[""],"labelNamespaceDefs":[""],"labelStyleSheet":[""],"hiddenInputSessionKeys":[""],"chompCharSize":[""],"elementToMove":[""],"elementToMoveSessionKey":["\"ref_\" + the name of the element"],"elementToMoveChain":[""],"(boolean) removeCompactMsgNamespaces":["true"],"xslt2":["false"]},"properties":[["classname","name of the class, mostly a class that extends this class","name of the class, mostly a class that extends this class"],["name","name of the receiver as known to the adapter",""],["active","when set false or set to something else as \"true\", (even set to the empty string), the receiver is not included in the configuration","true"],["numThreads","the number of threads that may execute a pipeline concurrently (only for pulling listeners)","1"],["numThreadsPolling","the number of threads that are activily polling for messages concurrently. '0' means 'limited only by numThreads' (only for pulling listeners)","1"],["onError","one of 'continue' or 'close'. Controls the behaviour of the receiver when it encounters an error sending a reply or receives an exception asynchronously","continue"],["returnedSessionKeys","comma separated list of keys of session variables that should be returned to caller, for correct results as well as for erronous results. (Only for listeners that support it, like JavaListener)",""],["transactionTimeout","Timeout (in seconds) of transaction started to receive and process a message.","0 (use system default)"],["maxDeliveries","The maximum delivery count after which to stop processing the message. When -1 the delivery count is ignored","5"],["maxRetries","The number of times a processing attempt is retried after an exception is caught or rollback is experienced (only applicable for transacted receivers). If maxRetries &lt; 0 the number of attempts is infinite","1"],["checkForDuplicatesMethod","(only used when checkForDuplicates=true) Either 'CORRELATIONID' or 'MESSAGEID'. Indicates whether the messageID or the correlationID is used for checking presence in the message log","MESSAGEID"],["pollInterval","The number of seconds waited after an unsuccesful poll attempt before another poll attempt is made. (only for polling listeners, not for e.g. IFSA, JMS, WebService or JavaListeners)","10"],["correlationIDXPath","xpath expression to extract correlationID from message",""],["correlationIDNamespaceDefs","namespace defintions for correlationIDXPath. Must be in the form of a comma or space separated list of prefix=namespaceuri-definitions",""],["correlationIDStyleSheet","stylesheet to extract correlationID from message",""],["hideRegex","Regular expression to mask strings in the error/logstore. Everything character between to strings in this expression will be replaced by a '*'that fits the expression is replaced. For Example, the regular expression (?&lt;=&lt;Party&gt;).*?(?=&lt;/Party&gt;) will replace every character between keys and  ",""],["hideMethod","(only used when hideRegex is not empty) either all or firstHalf. When firstHalf only the first half of the string is masked, otherwise (all) the entire string is masked","\"all\""],["labelXPath","xpath expression to extract label from message",""],["labelNamespaceDefs","namespace defintions for labelXPath. Must be in the form of a comma or space separated list of prefix=namespaceuri-definitions",""],["labelStyleSheet","stylesheet to extract label from message",""],["hiddenInputSessionKeys","comma separated list of keys of session variables which are available when the PipeLineSession is created and of which the value will not be shown in the log (replaced by asterisks)",""],["chompCharSize","if set (&gt;=0) and the character data length inside a xml element exceeds this size, the character data is chomped (with a clear comment)",""],["elementToMove","if set, the character data in this element is stored under a session key and in the message replaced by a reference to this session key: \"{sessionKey:\" + elementToMoveSessionKey + \"}\"",""],["elementToMoveSessionKey","(only used when elementToMove is set) name of the session key under which the character data is stored","\"ref_\" + the name of the element"],["elementToMoveChain","like elementToMove but element is preceded with all ancestor elements and separated by semicolons (e.g. \"adapter;pipeline;pipe\")",""],["(boolean) removeCompactMsgNamespaces","when set true namespaces (and prefixes) in the compacted message are removed","true"],["xslt2","when set true XSLT processor 2.0 (net.sf.saxon) will be used for extracting correlationID and label, otherwise XSLT processor 1.0 (org.apache.xalan)","false"]],"children":[],"description":"This Receiver may be used as a base-class for developing receivers.\n\n "},"ServiceDispatcher":{"_id":"5a3c1d79670a9fad1820b090","__v":0,"type":"receivers","classname":"ServiceDispatcher","url":"","free":"true","properties":[],"children":[],"description":"Singleton class that knows about the ServiceListeners that are active.\n \n This class is to be used as a facade for different services that implement\n the ServiceClient interface.\n This class is exposed as a webservice, to be able to provide a single point\n of entry to all adapters that have a ServiceListener as a IReceiver."},"ServiceDispatcher_ServiceProxy":{"_id":"5a3c1d79670a9fad1820b091","__v":0,"type":"receivers","classname":"ServiceDispatcher_ServiceProxy","url":"","free":"true","properties":[],"children":[],"description":"WebService proxy class that can be used in applications that need to communciate with\n the IBIS Adapterframework via a webservice."},"ServiceDispatcherBean":{"_id":"5a3c1d79670a9fad1820b092","__v":0,"type":"receivers","classname":"ServiceDispatcherBean","url":"","free":"true","properties":[],"children":[],"description":"Wrapper around the ServiceDispatcher to work around\n the problem that the ServiceDispatcher is a singleton\n and cannot be instantiated.\n N.B. This class is used by the deprecated old-style webservices, using ServiceDispatcher_ServiceProxy.\n Please consider using a call using serviceNamespaceURI instead."},"Hello World":{"_id":"5a3c20c5d7098cad30060f2c","__v":0,"type":"snippets","classname":"Hello World","url":"","free":"true","properties":[],"children":[],"description":"The standard Hello World app to demonstrate the functionality of the Ibis Adapter Framework."},"Hello Worlds":{"_id":"5a3c20c5d7098cad30060f2d","__v":0,"type":"snippets","classname":"Hello Worlds","url":"","free":"true","properties":[],"children":[],"description":"The extended Hello World app to demonstrate the functionality of the Ibis Adapter Framework."},"adapter":{"_id":"5a3c219e04b329ad40fd2a66","__v":0,"type":"general","classname":"adapter","url":"","free":"true","attrs":{"className":[""],"active":[""]},"properties":[["className","",""],["active","",""]],"children":[],"description":"generic adapter object as part of a module. Make sure to give it a classname of an existing pipe class."},"module":{"_id":"5a3c219e04b329ad40fd2a67","__v":0,"type":"general","classname":"module","url":"","free":"true","properties":[],"children":[],"description":"generic module object which is the top level object of an IBIS adapter. "},"exits":{"_id":"5a3c219e04b329ad40fd2a68","__v":0,"type":"general","classname":"exits","url":"","free":"true","properties":[],"children":[],"description":"generic exits object as part of a pipeline. "},"exit":{"_id":"5a3c219e04b329ad40fd2a69","__v":0,"type":"general","classname":"exit","url":"","free":"true","attrs":{"path":["EXIT"],"state":["success","failure"]},"properties":[["pate","","EXIT"],["state","","success"]],"children":[],"description":"generic exit object as part of a pipeline. "},"forward":{"_id":"5a3c224c4d7471ad473892d0","__v":0,"type":"general","classname":"forward","url":"","free":"true","attrs":{"name":["success","failure"],"path":[""]},"properties":[["className","",""],["name","",""]],"children":[],"description":"generic forward object as part of a pipe. "},"scheduler":{"_id":"5a3c224c4d7471ad473892d1","__v":0,"type":"general","classname":"scheduler","url":"","free":"true","properties":[],"children":[],"description":"Container object to schedule the execution of the pipeline."},"job":{"_id":"5a3c224c4d7471ad473892d2","__v":0,"type":"general","classname":"job","url":"","free":"true","attrs":{"name":[""],"adapterName":[""],"receiverName":[""],"cronExpression":[""],"function":[""],"active":[""]},"properties":[["name","",""],["adapterName","",""],["receiverName","",""],["cronExpression","",""],["function","",""],["active","",""]],"children":[],"description":""},"pipe":{"_id":"5a3c224c4d7471ad473892d3","__v":0,"type":"general","classname":"pipe","url":"","free":"true","attrs":{"className":[""],"name":[""]},"properties":[["className","",""],["name","",""]],"children":[],"description":"generic pipe object as part of a pipeline. Make sure to give it a classname of an existing pipe class."},"pipeline":{"_id":"5a3c226f9088faad4f8d2165","__v":0,"type":"general","classname":"pipeline","url":"","free":"true","attrs":{"firstPipe":[""]},"properties":[["firstPipe","The name of your first pipe should be filled in here.",""]],"children":[],"description":"generic pipeline object; the construction of a pipeline shoul be as follows:......"}}